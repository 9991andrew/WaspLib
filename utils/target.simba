{$DEFINE WL_TARGET_INCLUDED}
{$IFNDEF WL_UTILS}
  {$I WaspLib/utils.simba}
{$ENDIF}

function GetFileCount(path, ext: String): Int32;
begin
  Result := Length(GetFiles(path, ext));
end;

function GetAgeSortedFiles(Path, Ext: String): TStringArray;
  function SortFilesByAge(Files: TStringArray; LowToHigh: Boolean = True): TStringArray;
  var
    Weights: TIntegerArray;
    I: Integer;
  begin
    SetLength(Weights, Length(Files));
    for I := 0 to High(Weights) do
      Weights[I] := FileAge(Files[I]);

    Result := Sorted(Files, Weights, LowToHigh);
  end;
begin
  Result := SortFilesByAge(GetFiles(Path, Ext));
end;


procedure DeleteOldFiles(Path, Ext: String; KeepAmount: Int32);
var
  TotalAmount: Int32;
  FileArray: TStringArray;
  i: Int32;
begin
  Ext := Ext.After('.');

  TotalAmount := Length(GetFiles(Path, Ext));
  if TotalAmount < KeepAmount then
    Exit;

  FileArray := GetAgeSortedFiles(Path, Ext);

  for i := 0 to (TotalAmount - KeepAmount - 1) do
    DeleteFile(Path + FileArray[i]);
end;

function SaveScreenshot(FileName: String): String; override;
var
  path: String;
  fileExt: String;
  fileTime: String;
begin
  if not FileName.Contains('Screenshots/') then
    FileName := 'Screenshots/' + FileName;

  path := ExtractFilePath(FileName);
  if not ForceDirectories(path) then
    Exit;

  FileName := ExtractFileName(FileName);
  fileExt := ExtractFileExt(FileName);

  if fileExt = '' then
    fileExt := '.png';

  FileName := FileName.Before(fileExt);

  fileTime := '_' + FormatDateTime('yyyy-mm-dd_hh-mm-ss', Now());

  DeleteOldFiles(path, fileExt, 300);

  path += FileName + fileTime + fileExt;

  Result := inherited(Path);
end;

function SaveScreenshot(FileName: String; MessageUser: Boolean): String; overload;
begin
  Result := SaveScreenshot(FileName);

  if MessageUser then
    WriteLn 'Screenshot saved: ' + Result;
end;


procedure GenerateLog(FileName: String);
var
  Path: String;
  F: Int32;
begin
  if WL.LogFile <> '' then
    Exit;

  Path := AppPath + 'Logs/';
  if not ForceDirectories(Path) then
    Exit;

  DeleteOldFiles(Path, 'txt', 100);

  WL.LogFile := Path + FileName.Replace(' ', '_').ToLower() + '-' + ToStr(UnixTime) + '.txt';

  if not FileExists(WL.LogFile) then
  begin
    F := CreateFile(WL.LogFile);
    CloseFile(F);
  end;
end;


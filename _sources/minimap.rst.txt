
Minimap
=======
Methods to handle Minimap. Extends SRL's Minimap.


------------

Minimap.WaitMoving
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure TRSMinimap.WaitMoving(DoAntiban: Boolean = True);

Gives **Minimap.WaitPlayerMoving** the ability to perform antiban tasks while moving.

Example
-------
.. code-block:: pascal  

  Minimap.WaitMoving;


------------

Minimap.GetOrbLevel
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.GetOrbLevel(Orb: TCircle): Int32; override;

Override to fix SRL's **Minimap.GetOrbLevel**. Should add it to SRL in the future.

Example
-------
.. code-block:: pascal  

  WriteLn Minimap.GetOrbLevel(Minimap.GetHPCircle);


------------

Minimap.GetSpecLevel
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure TRSMinimap.GetSpecLevel: Int32;

**Minimap.GetSpecLevel** is used to retrieve the special attack level from the minimap orb.

Example
-------
.. code-block:: pascal  

  Writeln Minimap.GetSpecLevel;


------------

Minimap.IsSpecEnabled
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.IsSpecEnabled;

**Minimap.IsSpecEnabled** returns true if the special attack is enabled.

Example
-------
.. code-block:: pascal  

  Writeln Minimap.IsSpecEnabled;


------------

Minimap.IsSpecWeapon
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.IsSpecWeapon;

**Minimap.IsSpecWeapon** returns true if the current weapon has a special attack.
Returns false if the special attack level is at 0 or if the weapon doesn't have a special attack.

Example
-------
.. code-block:: pascal  

  Writeln Minimap.IsSpecWeapon;


------------

Minimap.EnableSpec
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.EnableSpec(MinSpec: Int32): Boolean;

**Minimap.EnableSpec** attempts to enable the special attack if we have at leas **MinSpec** special attack level.

Example
-------
.. code-block:: pascal  

  Minimap.EnableSpec(25);


------------

Minimap.DisableSpec
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.DisableSpec;

**Minimap.DisableSpec** attempts to disable the special attack.

Example
-------
.. code-block:: pascal  

  Minimap.DisableSpec;


------------

Minimap.HasStamina
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.HasStamina;

**Minimap.HasStamina** returns true if we are stamina boosted.

Example
-------
.. code-block:: pascal  

  WriteLn Minimap.HasStamina;


------------

Minimap.OnGroundLevel
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.OnGroundLevel;

**Minimap.OnGroundLevel** returns true if we are likely to be on the ground level.
This works by counting the amount of black in the minimap and might give false positives/negatives if there's more than 3500 black pixels on the minimap.
Example
-------
.. code-block:: pascal  

  WriteLn Minimap.OnGroundLevel;


------------

Minimap.InPOH
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function TRSMinimap.InPOH;

**Minimap.InPOH** returns true if we are in a POH.
This might give false positives if you are upstairs or in a place with few colors on the minimap.
It might also give false negatives if the POH is crowded.

Example
-------
.. code-block:: pascal  

  WriteLn Minimap.InPOH;


------------

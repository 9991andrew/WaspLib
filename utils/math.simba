{$DEFINE WL_MATH_INCLUDED}
{$IFNDEF WL_UTILS}
  {$I WaspLib/utils.simba}
{$ENDIF}

type
  TPoly = type TPointArray; //Polygon type. A valid polygon needs to have at least 3 points.
  TPolyArray = array of TPoly;

function TPoly.Filter(TestSet: TPointArray): TPointArray;
var
  i, count: UInt32;
begin
  if (High(TestSet) < 0) then
    Exit;

  SetLength(Result, Length(TestSet));
  count := 0;
  for i := 0 to High(TestSet) do
  begin
    if SRL.PointInPoly(TestSet[i], Self) then
    begin
      Result[count] := TestSet[i];
      Inc(count);
    end;
  end;
  SetLength(Result, Count);
end;

function GetDigit(Input: Extended; N: Int32): Int32;
begin
  Result := Floor(Input * Power(10, N)) mod 10;
end;

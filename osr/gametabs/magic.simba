{$DEFINE WL_MAGIC_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}



function TRSMagic.RandomSpellNearby(Spell: ERSStandardSpell): ERSStandardSpell;
var
  SpellBox: TBox := Self.GetSpellBox(Spell);
  SpellsBoxes: TBoxArray := Self.GetSpellBoxes;
  I: Int32;
  Points: TPointArray;
begin
  SpellsBoxes.Remove(SpellBox);
  if SpellsBoxes = [] then
    Self.Fatal('RandomSpellNearby: No Spell to choose from');

  SetLength(Points, Length(SpellsBoxes));
  for I := 0 to High(Points) do
    Points[I] := SRL.RandomPoint(SpellsBoxes[I]);

  Points.Sort(Self.GetSpellBox(Spell).Middle);

  Result := ERSStandardSpell(Self.PointToSpell(Points[SRL.TruncatedGauss(0, High(SpellsBoxes))]));
end;

function TRSMagic.RandomSpellNearby(Spell: ERSAncientSpell): ERSAncientSpell; overload;
var
  SpellBox: TBox := Self.GetSpellBox(Spell);
  SpellsBoxes: TBoxArray := Self.GetSpellBoxes;
  I: Int32;
  Points: TPointArray;
begin
  SpellsBoxes.Remove(SpellBox);
  if SpellsBoxes = [] then
    Self.Fatal('RandomSpellNearby: No Spell to choose from');

  SetLength(Points, Length(SpellsBoxes));
  for I := 0 to High(Points) do
    Points[I] := SRL.RandomPoint(SpellsBoxes[I]);

  Points.Sort(Self.GetSpellBox(Spell).Middle);

  Result := ERSAncientSpell(Self.PointToSpell(Points[SRL.TruncatedGauss(0, High(SpellsBoxes))]));
end;

function TRSMagic.RandomSpellNearby(Spell: ERSLunarSpell): ERSLunarSpell; overload;
var
  SpellBox: TBox := Self.GetSpellBox(Spell);
  SpellsBoxes: TBoxArray := Self.GetSpellBoxes;
  I: Int32;
  Points: TPointArray;
begin
  SpellsBoxes.Remove(SpellBox);
  if SpellsBoxes = [] then
    Self.Fatal('RandomSpellNearby: No Spell to choose from');

  SetLength(Points, Length(SpellsBoxes));
  for I := 0 to High(Points) do
    Points[I] := SRL.RandomPoint(SpellsBoxes[I]);

  Points.Sort(Self.GetSpellBox(Spell).Middle);

  Result := ERSLunarSpell(Self.PointToSpell(Points[SRL.TruncatedGauss(0, High(SpellsBoxes))]));
end;

function TRSMagic.RandomSpellNearby(Spell: ERSArceuusSpell): ERSArceuusSpell; overload;
var
  SpellBox: TBox := Self.GetSpellBox(Spell);
  SpellsBoxes: TBoxArray := Self.GetSpellBoxes;
  I: Int32;
  Points: TPointArray;
begin
  SpellsBoxes.Remove(SpellBox);
  if SpellsBoxes = [] then
    Self.Fatal('RandomSpellNearby: No Spell to choose from');

  SetLength(Points, Length(SpellsBoxes));
  for I := 0 to High(Points) do
    Points[I] := SRL.RandomPoint(SpellsBoxes[I]);

  Points.Sort(Self.GetSpellBox(Spell).Middle);

  Result := ERSArceuusSpell(Self.PointToSpell(Points[SRL.TruncatedGauss(0, High(SpellsBoxes))]));
end;

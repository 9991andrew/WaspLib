const
  PATH = IncludePath + 'WaspLib\utils\data\tools\';

var
  Data: TJSONArray;
  CurrentObj, TempObj: TJSONObject;
  KeysDone: TStringArray;
  i, j, DataLength: int32;
  Str, CleanStr: String;
begin
  Data.Init(ReadFileContents(PATH + 'objects-raw.json'));
  AddOnTerminate(@Data.Free);

  DataLength := Data.length;
  DeleteFile(PATH + 'objects-temp.json');
  WriteFileContents(PATH + 'objects-temp.json', '[' + LineEnding, True);

  for i := 0 to DataLength - 1 do
  begin
    WriteLn(i, ' of ', DataLength, ' done.');
    CurrentObj := Data.getJSONObject(i);
    Str := CurrentObj.getString("name");

    if KeysDone.Contains(Str) then //if we already done this object skip it.
      Continue;

    for j := (i+1) to DataLength - 1 do
    begin
      if j >= (DataLength - 1) then
        Break;

      TempObj := Data.getJSONObject(j);
      if Str = TempObj.getString("name") then
        CurrentObj.getJSONArray("type").put(TempObj.getJSONArray("type").get(0));
    end;

    KeysDone += Str;

    CleanStr := CurrentObj.toString(1).Replace('\u0020', ' ');
    CleanStr := CleanStr.Replace(#10' "', '"');
    CleanStr := CleanStr.Replace(#10'   "', '"');
    CleanStr := CleanStr.Replace(#10'    ', '');
    CleanStr := CleanStr.Replace(#10'   ],"position": ', '],"position": ');
    CleanStr := CleanStr.Replace(#10'  }', '}');
    CleanStr := CleanStr.Replace(#10'   ]]}', ']]}');
    CleanStr := CleanStr.Replace(#10'}', '}');

    CleanStr := CleanStr.Replace(#10'  "', '"');
    CleanStr := CleanStr.Replace(#10'   ', '');
    CleanStr := CleanStr.Replace(#10'  ]', ']');
    CleanStr := CleanStr.Replace(#10' }]}', '}]}');

    if i < (DataLength - 1) then
      CleanStr += ',' + LineEnding;

    WriteFileContents(PATH + 'objects-temp.json', CleanStr, True);
  end;

  WriteFileContents(PATH + 'objects-temp.json', ']', True);
end.


RSFishingHandler
================
RSFishingHandler is a full color fishing bot that is highly customizable.


------------

RSFishingHandler.Setup
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure RSFishingHandler.Setup(); static;

Resets RSFishingHandler to the non fishing state.
This will:
  - Pause RSFishingHandler.Timer;
  - Reset RSFishingHandler.CurrentSpot;
  - Set RSFishingHandler.IsFishing to False;


------------

RSFishingHandler.Reset
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure RSFishingHandler.Reset(); static;

Resets RSFishingHandler to the non fishing state.
This will:
  - Pause RSFishingHandler.Timer;
  - Reset RSFishingHandler.CurrentSpot;
  - Set RSFishingHandler.IsFishing to False;


------------

RSFishingHandler.GetMMShoreLine
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function RSFishingHandler.GetMMShoreLine(): TPointArray; static;

Get the shore lines on the minimap.

Example
-------
.. code-block:: pascal  

  ShowOnClient(RSFishingHandler.GetMMShoreLine());


------------

RSFishingHandler.GetMSShoreLine
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function RSFishingHandler.GetMSShoreLine(): TPointArray; static;

Get the shore lines on the mainscreen.

Example
-------
.. code-block:: pascal  

  ShowOnClient(RSFishingHandler.GetMSShoreLine());


------------

RSFishingHandler.FindWaterDirection
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function RSFishingHandler.FindWaterDirection(): TRectangle; static;

Finds the adjacent tile that is directly close to the player that has water.

Example
-------
.. code-block:: pascal  

  ShowOnClient(RSFishingHandler.FindWaterDirection(), False);


------------

RSFishingHandler.FindSpot
~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function RSFishingHandler.FindSpot(out atpa: T2DPointArray; waitTime: Int32 = 350): Boolean; static;
.. code-block:: pascal

 function RSFishingHandler.FindSpot(): Boolean; static; overload;

Find fishing spots on the mainscreen. Optionally return at ATPA of the found spots.

Example
-------
.. code-block:: pascal  

  var
    atpa: T2DPointArray;
  begin
    if RSFishingHandler.FindSpot(atpa) then //RSFishingHandler.FindSpot() returns true/false.
      ShowOnClient(atpa);
  end;


------------

RSFishingHandler.WaitSpot
~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function RSFishingHandler.WaitSpot(out atpa: T2DPointArray; waitTime: Int32 = 350): Boolean; static;
.. code-block:: pascal

 function RSFishingHandler.WaitSpot(): Boolean; static; overload;

Wait for fishing spots on the mainscreen. Optionally return at ATPA of the found spots.

Example
-------
.. code-block:: pascal  

  var
    atpa: T2DPointArray;
  begin
    if RSFishingHandler.WaitSpot(atpa) then //RSFishingHandler.FindSpot() returns true/false.
      ShowOnClient(atpa);
  end;


------------

RSFishingHandler.SpotMoved
~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function RSFishingHandler.SpotMoved(out atpa: T2DPointArray): Boolean; static;
.. code-block:: pascal

 function RSFishingHandler.SpotMoved(): Boolean; static; overload;

Check if RSFishingHandler.CurrentSpot moved.

Example
-------
.. code-block:: pascal  

  WriteLn RSFishingHandler.SpotMoved();


------------

RSFishingHandler.CheckFishing
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function RSFishingHandler.CheckFishing(out atpa: T2DPointArray): Boolean; static;
.. code-block:: pascal

 function RSFishingHandler.CheckFishing(): Boolean; static; overload;

Check if we are still fishing. This function could give false positives but it's extremely unlikely.
To determine if we are still fishing it does the following:
  - Check if RSFishingHandler.CurrentSpot (which is the last spot we clicked) has moved.
  - Check if the inventory is full.
  - Check if we leveled up.
  - Check if RSFishingHandler.Timer has reached it's end. The time lasts anywhere between 40 seconds and 70 seconds randomly
    and it's reset everytime this is called and we earned XP.

Example
-------
.. code-block:: pascal  

  WriteLn RSFishingHandler.CheckFishing();


------------

RSFishingHandler.FacingWater
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 function RSFishingHandler.FacingWater(): Boolean; static;

Check if we have water directly north, west, south or east of us.

Example
-------
.. code-block:: pascal  

  WriteLn RSFishingHandler.FacingWater();


------------

RSFishingHandler.ClickSpot
~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal


  function RSFishingHandler.ClickSpot(out atpa: T2DPointArray): Boolean; static;
  function RSFishingHandler.ClickSpot(): Boolean; static; overload;

Click the closest fishing spot to the player and switches RSFishingHandler to "IsFishing".
We can check if we are still fishing with RSFishingHandler.CheckFishing().

Example
-------
.. code-block:: pascal  

  RSFishingHandler.ClickSpot();


------------

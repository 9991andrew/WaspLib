{$DEFINE WL_BOOST_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type
  TRSBoost = record
    Skills: array of ERSSkill;
    LevelsBoost: TIntegerArray;
    ItemDoses: TRSItemArray;
    LeftOver: TRSItem;
    Countdown: TCountdown;
  end;

  TRSFood = record
    Heal: TIntegerArray;
    ItemPortions: TRSItemArray;
    LeftOver: TRSItem;
  end;

  TRSBaseStats = record
    Skills: array of ERSSkill;
    Levels: TIntegerArray;
  end;

procedure TRSBaseStats.Setup;
var
  i: Int32;
begin
  if not Stats.Open then
    Exit;

  for i := Ord(ERSSkill.ATTACK) to Ord(ERSSkill.HUNTER) do
  begin
    Skills += ERSSkill(i);
    Levels += Stats.GetCurrentLevel(ERSSkill(i));
  end;
end;

var
  BaseStats: TRSBaseStats;

function TRSBoost.Consume(Force: Boolean = False): Boolean;
var
  ItemDose: TRSItem;
  Slot: Int32;
begin
  if BaseStats = [] then
    BaseStats.Setup;

  if not Force and Countdown.IsFinished then
    Exit;

  for ItemDose in ItemDoses do
    if Inventory.FindItem(ItemDose, Slot) then
      Break;

  if Slot = -1 then //if item was not found exit.
    Exit;

  if Inventory.ClickSlot(Slot) then
    Result := Inventory.WaitItemFade(Slot);

  if Result then
    Countdown.Restart;
end;



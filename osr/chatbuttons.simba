{$DEFINE WL_CHATBUTTONS_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type
  ERSChatButton = (
    CLOSED,

    ALL_CHAT,
    GAME_CHAT,
    PUBLIC_CHAT,
    PRIVATE_CHAT,
    CLAN_CHAT,
    TRADE_CHAT,

    REPORT_CHAT
  );

function TRSChatButtons.GetButtons: TRSButtonArray;
var
  I: Int32;
  Boxes: TBoxArray;
begin
  SetLength(Boxes, 6);
  for I := 0 to High(Boxes) do
    Boxes[I] := [(Self.X1 + 5 + (I * 66)), Self.Y1, (Self.X1 + 60 + (I * 66)), (Self.Y2 - 1)];

  Boxes += [[(Self.X1 + 403), Self.Y1, (Self.X1 + 513), (Self.Y2 - 1)]];

  for I := 0 to High(Boxes) do
    Result += [[CTS1(1555, 6), CTS1(5399922, 0), CTS1(795452, 0)], I, Boxes[I], Boxes[I].Middle];
end;

function TRSChatButtons.GetButton(Button: ERSChatButton): TRSButton;
var
  Buttons: TRSButtonArray := Self.GetButtons();
begin
  if Button = ERSChatButton.CLOSED then
    Exit;
  if Length(Buttons) = (Length(ERSChatButton) - 1) then
    Result := Buttons[Button - 1];
end;

function TRSChatButtons.GetActive: ERSChatButton;
var
  Buttons: TRSButtonArray := Self.GetButtons();
  i: Int32;
begin
  Result := ERSChatButton.CLOSED;
  for i := 0 to High(Buttons) do
    if Buttons[i].Enabled then
      Exit(ERSChatButton((i+1)));
end;

function TRSChatButtons.IsOpen: Boolean; override;
begin
  Result := Self.GetActive = ERSChatButton.CLOSED;
end;

procedure TRSChatButtons.Draw(Bitmap: TMufasaBitmap); override;
begin
  inherited;

  Bitmap.DrawButtons(Self.GetButtons());
end;


function TRSChatButtons.IsActive(ChatButton: ERSChatButton): Boolean;
begin
  Result := Self.GetButton(ChatButton).Enabled;
end;

function TRSChatButtons.Open(ChatButton: ERSChatButton): Boolean;
begin
  Result := Self.GetButton(ChatButton).Enable;
end;

function TRSChatButtons.Close: Boolean;
begin
  if RSClient.Mode = ERSClientMode.FIXED then
    Exit(False);

  if Self.GetActive = ERSChatButton.CLOSED then
    Exit(True);

  Result := Self.GetButton(Self.GetActive).Click();
end;


{$DEFINE WL_CHATBUTTONS_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type
  ERSChatButton = (
    ALL_CHAT,
    GAME_CHAT,
    PUBLIC_CHAT,
    PRIVATE_CHAT,
    CLAN_CHAT,
    TRADE_CHAT,
    REPORT_CHAT
  );

function TRSChatButtons.GetButtons: TRSButtonArray;
var
  I: Int32;
  Boxes: TBoxArray;
begin
  SetLength(Boxes, 6);
  for I := 0 to High(Boxes) do
    Boxes[I] := [(Self.X1 + 5 + (I * 66)), Self.Y1, (Self.X1 + 60 + (I * 66)), (Self.Y2 - 1)];

  Boxes += [[(Self.X1 + 403), Self.Y1, (Self.X1 + 513), (Self.Y2 - 1)]];

  for I := 0 to High(Boxes) do
    Result += [I, Boxes[I], Boxes[I].Middle];
end;

function TRSChatButtons.GetButton(Button: ERSChatButton): TRSButton;
var
  Buttons: TRSButtonArray := Self.GetButtons();
begin
  if Length(Buttons) = Length(ERSChatButton) then
    Result := Buttons[Button];
end;

procedure TRSChatButtons.Debug(Bitmap: TMufasaBitmap); override;
begin
  if not Self.IsOpen then
    Exit;

  inherited;

  Bitmap.DrawButtons(Self.GetButtons());
end;

function TRSChatButtons.GetActive: ERSChatButton;
var
  Buttons: TRSButtonArray := Self.GetButtons();
  i: Int32;
begin
  for i := 0 to High(Buttons) do
  begin
    if i = 6 then
      Exit(ERSChatButton(i));
    if SRL.CountColor(CTS2(2439238, 2, 0.22, 2.13), Buttons[i].Bounds) > 0 then
      Exit(ERSChatButton(i));
  end;
end;

function TRSChatButtons.IsActive(ChatButton: ERSChatButton): Boolean;
begin
  Result := ChatButton = Self.GetActive;
end;

function TRSChatButtons.Open(ChatButton: ERSChatButton): Boolean;
begin
  if Self.IsActive(ChatButton) then
    Exit(True);

  Self.GetButton(ChatButton).Click();
  Result := WaitUntil(Self.IsActive(ChatButton), 10, 2000);
end;

function TRSChatButtons.Close: Boolean;
begin
  if RSClient.Mode = ERSClientMode.FIXED then
    Exit(False);
  if Self.GetActive = ERSChatButton.REPORT_CHAT then
    Exit(True);

  Self.GetButton(Self.GetActive).Click();
  Result := Self.GetActive = ERSChatButton.REPORT_CHAT;
end;


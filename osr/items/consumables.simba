{$DEFINE WL_CONSUMABLES_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type
  //TRSConsumable is all types of consumable items (food, potions, etc).
  TRSConsumable = record
    Item: TRSItem;
    Parent: TRSItem;
    LeftOver: TRSItem;
    Points: UInt32;
    Timer: UInt32;
    Cost: Int32;
    IsSetup: Boolean;
  end;

  TRSConsumableArray = array of TRSConsumable;

  //TRSFood is any type of TRSConsumable that increases health.
  TRSFood = type TRSConsumable;
  TRSFoodArray = array of TRSFood;

  //TRSPrayerPotion is any type of TRSConsumable that increases prayer.
  TRSPrayerPotion = type TRSConsumable;
  TRSPrayerPotionArray = array of TRSPrayerPotion;

  //TRSEnergyPotion is any type of TRSConsumable that increases run energy.
  TRSEnergyPotion = type TRSConsumable;
  TRSEnergyPotionArray = array of TRSEnergyPotion;

  //TRSBoost is any type of TRSConsumable that boosts a skill.
  TRSBoost = record(TRSConsumable)
    Skills: array of ERSSkill;
    LevelsBoost: TIntegerArray;
    Countdown: TCountdown;
  end;
  TRSBoosArray = array of TRSBoost;


function GetConsumableArray(ConsumableType: ERSConsumable): TRSItemArray;
begin
  case ConsumableType of
    ERSConsumable.FOOD_CONSUMABLE:      Result := FOOD_ARRAY;
    ERSConsumable.PRAYER_CONSUMABLE:    Result := PRAYER_ARRAY;
    ERSConsumable.ENERGY_CONSUMABLE:    Result := ENERGY_ARRAY;
    ERSConsumable.POISON_CONSUMABLE:    Result := ANTI_POISON_ARRAY;
    ERSConsumable.VENOM_CONSUMABLE:     Result := ANTI_VENOM_ARRAY;
    ERSConsumable.ANTI_FIRE_CONSUMABLE: Result := ANTI_FIRE_ARRAY;
    ERSConsumable.BOOST_CONSUMABLE:     Result := BOOST_ARRAY;
  end;
end;


procedure TRSConsumable.SetupFood;
var
  HPLevel: Int32;
begin
  if IsSetup then
    Exit;

  Parent := 'Null';
  LeftOver := 'Null';

  case Item of
    'Shrimps', 'Cooked chicken', 'Cooked meat':
      Points := 3;
    'Sardine':
      Points := 4;
    'Bread', 'Herring':
      Points := 5;
    'Mackerel', 'Choc-ice':
      Points := 6;
    'Trout', 'Cod':
      Points := 7;
    'Pike', 'Roast beast meat':
      Points := 8;
    'Pineapple punch':
      begin
        Points := 9;
        LeftOver := 'Cocktail glass';
      end;
    'Salmon':
      Points := 9;
    'Tuna':
      Points := 10;
    'Jug of wine':
      begin
        Points := 11;
        LeftOver := 'Jug';
      end;
    'Rainbow fish':
      Points := 11;
    'Stew', 'Banana stew':
      begin
        Points := 11;
        LeftOver := 'Bowl';
      end;
    'Cake':
      begin
        Points := 12;
        LeftOver := '2/3 cake';
      end;
    '2/3 cake':
      begin
        Points := 8;
        Parent := 'Cake';
        LeftOver := 'Slice of cake';
      end;
    'Slice of cake':
      begin
        Points := 4;
        Parent := 'Cake';
      end;
    'Meat pie':
      begin
        Points := 12;
        LeftOver := 'Half a meat pie';
      end;
    'Half a meat pie':
      begin
        Points := 6;
        Parent := 'Meat pie';
        LeftOver := 'Pie dish';
      end;
    'Lobster':
      Points := 12;
    'Bass':
      Points := 13;
    'Plain pizza':
      begin
        Points := 14;
        LeftOver := '1/2 plain pizza';
      end;
    '1/2 plain pizza':
      begin
        Points := 7;
        Parent := 'Plain pizza';
      end;
    'Swordfish', 'Potato with butter':
      Points := 14;
    'Apple pie':
      begin
        Points := 14;
        LeftOver := 'Half an apple pie';
      end;
    'Half an apple pie':
      begin
        Points := 7;
        Parent := 'Apple pie';
        LeftOver := 'Pie dish';
      end;
    'Chocolate cake':
      begin
        Points := 15;
        LeftOver := '2/3 chocolate cake';
      end;
    '2/3 chocolate cake':
      begin
        Points := 10;
        Parent := 'Chocolate cake';
        LeftOver := 'Chocolate slice';
      end;
    'Chocolate slice':
      begin
        Points := 5;
        Parent := 'Chocolate cake';
      end;
    'Tangled toad''s legs', 'Chocolate bomb':
      Points := 15;
    'Potato with cheese':
      Points := 16;
    'Meat pizza':
      begin
        Points := 16;
        LeftOver := '1/2 meat pizza';
      end;
    '1/2 meat pizza':
      begin
        Points := 8;
        Parent := 'Meat pizza';
      end;
    'Admiral pie':
      begin
        Points := 16;
        LeftOver := 'Half an admiral pie';
      end;
    'Half an admiral pie':
      begin
        Points := 8;
        Parent := 'Admiral pie';
        LeftOver := 'Pie dish';
      end;
    'Monkfish':
      Points := 16;
    'Anchovy pizza':
      begin
        Points := 18;
        LeftOver := '1/2 anchovy pizza';
      end;
    '1/2 anchovy pizza':
      begin
        Points := 9;
        Parent := 'Anchovy pizza';
      end;
    'Cooked karambwan':
      Points := 18;
    'Curry':
      Points := 19;
    'Ugthanki kebab':
      Points := 19;
    'Guthix rest(4)':
      begin
        Points := 20;
        LeftOver := 'Guthix rest(3)';
      end;
    'Guthix rest(3)':
      begin
        Points := 15;
        Parent := 'Guthix rest(4)';
        LeftOver := 'Guthix rest(2)';
      end;
    'Guthix rest(2)':
      begin
        Points := 10;
        Parent := 'Guthix rest(4)';
        LeftOver := 'Guthix rest(1)';
      end;
    'Guthix rest(1)':
      begin
        Points := 5;
        Parent := 'Guthix rest(4)';
        LeftOver := 'Empty cup';
      end;
    'Dragonfruit pie':
      begin
        Points := 20;
        LeftOver := 'Half a dragonfruit pie';
      end;
    'Half a dragonfruit pie':
      begin
        Points := 10;
        Parent := 'Dragonfruit pie';
        LeftOver := 'Pie dish';
      end;
    'Mushroom potato', 'Shark':
      Points := 20;
    'Sea turtle':
      Points := 21;
    'Pineapple pizza':
      begin
        Points := 22;
        LeftOver := '1/2 pineapple pizza';
      end;
    '1/2 pineapple pizza':
      begin
        Points := 11;
        Parent := 'Pineapple pizza';
      end;
    'Summer pie':
      begin
        Points := 22;
        LeftOver := 'Half a summer pie';
      end;
    'Half a summer pie':
      begin
        Points := 11;
        Parent := 'Summer pie';
        LeftOver := 'Pie dish';
      end;
    'Wild pie':
      begin
        Points := 22;
        LeftOver := 'Half a wild pie';
      end;
    'Half a wild pie':
      begin
        Points := 11;
        Parent := 'Wild pie';
        LeftOver := 'Pie dish';
      end;
    'Manta ray', 'Tuna potato', 'Dark crab':
      Points := 22;
    'Anglerfish':
      begin
        HPLevel := BaseStats.GetCurrentLevel(ERSSkill.HITPOINTS);
        case HPLevel of
          10..24: Points := Floor(HPLevel * 0.1) + 2;
          25..49: Points := Floor(HPLevel * 0.1) + 4;
          50..74: Points := Floor(HPLevel * 0.1) + 6;
          75..92: Points := Floor(HPLevel * 0.1) + 8;
          93..99: Points := Floor(HPLevel * 0.1) + 13;
        end;
      end;
    'Saradomin brew(4)':
      begin
        Points := (Floor(BaseStats.GetCurrentLevel(ERSSkill.HITPOINTS) * 0.15) + 2) * 4;
        LeftOver := 'Saradomin brew(3)';
      end;
    'Saradomin brew(3)':
      begin
        Points := (Floor(BaseStats.GetCurrentLevel(ERSSkill.HITPOINTS) * 0.15) + 2) * 3;
        Parent := 'Saradomin brew(4)';
        LeftOver := 'Saradomin brew(2)';
      end;
    'Saradomin brew(2)':
      begin
        Points := (Floor(BaseStats.GetCurrentLevel(ERSSkill.HITPOINTS) * 0.15) + 2) * 2;
        Parent := 'Saradomin brew(4)';
        LeftOver := 'Saradomin brew(1)';
      end;
    'Saradomin brew(1)':
      begin
        Points := Floor(BaseStats.GetCurrentLevel(ERSSkill.HITPOINTS) * 0.15) + 2;
        Parent := 'Saradomin brew(4)';
        LeftOver := 'Vial';
      end;
  end;

  IsSetup := True;
end;

procedure TRSConsumable.SetupPrayer;
begin
  if IsSetup then
    Exit;

  Parent := 'Null';
  LeftOver := 'Null';

  case Item of
    'Prayer potion(4)':
      begin
        Points := Floor((BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.25) + 7);
        LeftOver := 'Prayer potion(3)';
      end;
    'Prayer potion(3)':
      begin
        Points := Floor((BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.25) + 7);
        Parent := 'Prayer potion(4)';
        LeftOver := 'Prayer potion(2)';
      end;
    'Prayer potion(2)':
      begin
        Points := Floor((BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.25) + 7);
        Parent := 'Prayer potion(4)';
        LeftOver := 'Prayer potion(1)';
      end;
    'Prayer potion(1)':
      begin
        Points := Floor((BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.25) + 7);
        Parent := 'Prayer potion(4)';
        LeftOver := 'Vial';
      end;
    'Super restore(4)':
      begin
        Points := Floor((BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.25) + 8);
        LeftOver := 'Super restore(3)';
      end;
    'Super restore(3)':
      begin
        Points := Floor((BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.25) + 8);
        Parent := 'Super restore(4)';
        LeftOver := 'Super restore(2)';
      end;
    'Super restore(2)':
      begin
        Points := Floor((BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.25) + 8);
        Parent := 'Super restore(4)';
        LeftOver := 'Super restore(1)';
      end;
    'Super restore(1)':
      begin
        Points := Floor((BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.25) + 8);
        Parent := 'Super restore(4)';
        LeftOver := 'Vial';
      end;
    'Sanfew serum(4)':
      begin
        Points := Floor((BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.3) + 4);
        LeftOver := 'Sanfew serum(3)';
      end;
    'Sanfew serum(3)':
      begin
        Points := Floor((BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.3) + 4);
        Parent := 'Sanfew serum(4)';
        LeftOver := 'Sanfew serum(2)';
      end;
    'Sanfew serum(2)':
      begin
        Points := Floor((BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.3) + 4);
        Parent := 'Sanfew serum(4)';
        LeftOver := 'Sanfew serum(1)';
      end;
    'Sanfew serum(1)':
      begin
        Points := Floor((BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.3) + 4);
        Parent := 'Sanfew serum(4)';
        LeftOver := 'Vial';
      end;
    'Zamorak brew(4)':
      begin
        Points := Floor(BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.1);
        LeftOver := 'Zamorak brew(3)';
      end;
    'Zamorak brew(3)':
      begin
        Points := Floor(BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.1);
        Parent := 'Zamorak brew(4)';
        LeftOver := 'Zamorak brew(2)';
      end;
    'Zamorak brew(2)':
      begin
        Points := Floor(BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.1);
        Parent := 'Zamorak brew(4)';
        LeftOver := 'Zamorak brew(1)';
      end;
    'Zamorak brew(1)':
      begin
        Points := Floor(BaseStats.GetCurrentLevel(ERSSkill.PRAYER) * 0.1);
        Parent := 'Zamorak brew(4)';
        LeftOver := 'Vial';
      end;
    'Jangerberries':
      Points := 1;
  end;

  IsSetup := True;
end;

procedure TRSConsumable.SetupEnergy;
begin
  if IsSetup then
    Exit;

  Parent := 'Null';
  LeftOver := 'Null';

  case Item of
    'White tree fruit':
      Points := 5;
    'Winter sq''irkjuice':
      begin
        Points := 10;
        LeftOver := 'Beer glass';
      end;
    'Spring sq''irkjuice':
      begin
        Points := 20;
        LeftOver := 'Beer glass';
      end;
    'Autumn sq''irkjuice':
      begin
        Points := 30;
        LeftOver := 'Beer glass';
      end;
    'Summer sq''irkjuice':
      begin
        Points := 40;
        LeftOver := 'Beer glass';
      end;
    'Bandages':
      Points := 30;
    'Guthix rest(4)':
      begin
        Points := 5;
        LeftOver := 'Guthix rest(3)';
      end;
    'Guthix rest(3)':
      begin
        Points := 5;
        Parent := 'Guthix rest(4)';
        LeftOver := 'Guthix rest(2)';
      end;
    'Guthix rest(2)':
      begin
        Points := 5;
        Parent := 'Guthix rest(4)';
        LeftOver := 'Guthix rest(1)';
      end;
    'Guthix rest(1)':
      begin
        Points := 5;
        Parent := 'Guthix rest(4)';
        LeftOver := 'Empty cup';
      end;
    'Papaya fruit':
      Points := 5;
    'Energy potion(4)':
      begin
        Points := 10;
        LeftOver := 'Energy potion(3)';
      end;
    'Energy potion(3)':
      begin
        Points := 10;
        Parent := 'Energy potion(4)';
        LeftOver := 'Energy potion(2)';
      end;
    'Energy potion(2)':
      begin
        Points := 10;
        Parent := 'Energy potion(4)';
        LeftOver := 'Energy potion(1)';
      end;
    'Energy potion(1)':
      begin
        Points := 10;
        Parent := 'Energy potion(4)';
        LeftOver := 'Vial';
      end;
    'Purple sweets':
      Points := 10;
    'Summer pie':
      begin
        Points := 10;
        LeftOver := 'Half a summer pie';
      end;
    'Half a summer pie':
      begin
        Points := 0;
        Parent := 'Summer pie';
        LeftOver := 'Pie dish';
      end;

    'Super energy(4)':
      begin
        Points := 20;
        LeftOver := 'Super energy(3)';
      end;
    'Super energy(3)':
      begin
        Points := 20;
        Parent := 'Super energy(4)';
        LeftOver := 'Super energy(2)';
      end;
    'Super energy(2)':
      begin
        Points := 20;
        Parent := 'Super energy(4)';
        LeftOver := 'Super energy(1)';
      end;
    'Super energy(1)':
      begin
        Points := 20;
        Parent := 'Super energy(4)';
        LeftOver := 'Vial';
      end;

    'Stamina potion(4)':
      begin
        Points := 20;
        Timer := 2 * ONE_MINUTE;
        LeftOver := 'Stamina potion(3)';
      end;
    'Stamina potion(3)':
      begin
        Points := 20;
        Timer := 2 * ONE_MINUTE;
        Parent := 'Stamina potion(4)';
        LeftOver := 'Stamina potion(2)';
      end;
    'Stamina potion(2)':
      begin
        Points := 20;
        Timer := 2 * ONE_MINUTE;
        Parent := 'Stamina potion(4)';
        LeftOver := 'Stamina potion(1)';
      end;
    'Stamina potion(1)':
      begin
        Points := 20;
        Timer := 2 * ONE_MINUTE;
        Parent := 'Stamina potion(4)';
        LeftOver := 'Vial';
      end;

    'Strange fruit':
      Points := 30;
    'Mint cake':
      Points := 50;
    'Gout tuber':
      Points := 50;
  end;

  IsSetup := True;
end;

procedure TRSConsumable.SetupAntiPoison;
begin
  if IsSetup then
    Exit;

  Parent := 'Null';
  LeftOver := 'Null';

  case Item of
    'Sanfew serum(4)':
      begin
        Timer := 6 * ONE_MINUTE;
        LeftOver := 'Sanfew serum(3)';
      end;
    'Sanfew serum(3)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Sanfew serum(4)';
        LeftOver := 'Sanfew serum(2)';
      end;
    'Sanfew serum(2)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Sanfew serum(4)';
        LeftOver := 'Sanfew serum(1)';
      end;
    'Sanfew serum(1)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Sanfew serum(4)';
        LeftOver := 'Vial';
      end;

    'Anti-venom+(4)':
      begin
        Timer := 15 * ONE_MINUTE;
        LeftOver := 'Anti-venom+(3)';
      end;
    'Anti-venom+(3)':
      begin
        Timer := 15 * ONE_MINUTE;
        Parent := 'Anti-venom+(4)';
        LeftOver := 'Anti-venom+(2)';
      end;
    'Anti-venom+(2)':
      begin
        Timer := 15 * ONE_MINUTE;
        Parent := 'Anti-venom+(4)';
        LeftOver := 'Anti-venom+(1)';
      end;
    'Anti-venom+(1)':
      begin
        Timer := 15 * ONE_MINUTE;
        Parent := 'Anti-venom+(4)';
        LeftOver := 'Vial';
      end;

    'Anti-venom(4)':
      begin
        Timer := 12 * ONE_MINUTE;
        LeftOver := 'Anti-venom(3)';
      end;
    'Anti-venom(3)':
      begin
        Timer := 12 * ONE_MINUTE;
        Parent := 'Anti-venom(4)';
        LeftOver := 'Anti-venom(2)';
      end;
    'Anti-venom(2)':
      begin
        Timer := 12 * ONE_MINUTE;
        Parent := 'Anti-venom(4)';
        LeftOver := 'Anti-venom(1)';
      end;
    'Anti-venom(1)':
      begin
        Timer := 12 * ONE_MINUTE;
        Parent := 'Anti-venom(4)';
        LeftOver := 'Vial';
      end;

    'Antidote++(4)':
      begin
        Timer := 12 * ONE_MINUTE;
        LeftOver := 'Antidote++(3)';
      end;
    'Antidote++(3)':
      begin
        Timer := 12 * ONE_MINUTE;
        Parent := 'Antidote++(4)';
        LeftOver := 'Antidote++(2)';
      end;
    'Antidote++(2)':
      begin
        Timer := 12 * ONE_MINUTE;
        Parent := 'Antidote++(4)';
        LeftOver := 'Antidote++(1)';
      end;
    'Antidote++(1)':
      begin
        Timer := 12 * ONE_MINUTE;
        Parent := 'Antidote++(4)';
        LeftOver := 'Vial';
      end;

    'Antidote+(4)':
      begin
        Timer := 9 * ONE_MINUTE;
        LeftOver := 'Antidote+(3)';
      end;
    'Antidote+(3)':
      begin
        Timer := 9 * ONE_MINUTE;
        Parent := 'Antidote+(4)';
        LeftOver := 'Antidote+(2)';
      end;
    'Antidote+(2)':
      begin
        Timer := 9 * ONE_MINUTE;
        Parent := 'Antidote+(4)';
        LeftOver := 'Antidote+(1)';
      end;
    'Antidote+(1)':
      begin
        Timer := 9 * ONE_MINUTE;
        Parent := 'Antidote+(4)';
        LeftOver := 'Vial';
      end;

    'Superantipoison(4)':
      begin
        Timer := 6 * ONE_MINUTE;
        LeftOver := 'Superantipoison(3)';
      end;
    'Superantipoison(3)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Superantipoison(4)';
        LeftOver := 'Superantipoison(2)';
      end;
    'Superantipoison(2)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Superantipoison(4)';
        LeftOver := 'Superantipoison(1)';
      end;
    'Superantipoison(1)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Superantipoison(4)';
        LeftOver := 'Vial';
      end;

    'Antipoison(4)':
      begin
        Timer := 90 * ONE_SECOND;
        LeftOver := 'Antipoison(3)';
      end;
    'Antipoison(3)':
      begin
        Timer := 90 * ONE_SECOND;
        Parent := 'Antipoison(4)';
        LeftOver := 'Antipoison(2)';
      end;
    'Antipoison(2)':
      begin
        Timer := 90 * ONE_SECOND;
        Parent := 'Antipoison(4)';
        LeftOver := 'Antipoison(1)';
      end;
    'Antipoison(1)':
      begin
        Timer := 90 * ONE_SECOND;
        Parent := 'Antipoison(4)';
        LeftOver := 'Vial';
      end;
  end;

  IsSetup := True;
end;

procedure TRSConsumable.SetupAntiVenom;
begin
  if IsSetup then
    Exit;

  Parent := 'Null';
  LeftOver := 'Null';

  case Item of
    'Anti-venom+(4)':
      begin
        Timer := 3 * ONE_MINUTE;
        LeftOver := 'Anti-venom+(3)';
      end;
    'Anti-venom+(3)':
      begin
        Timer := 3 * ONE_MINUTE;
        Parent := 'Anti-venom+(4)';
        LeftOver := 'Anti-venom+(2)';
      end;
    'Anti-venom+(2)':
      begin
        Timer := 3 * ONE_MINUTE;
        Parent := 'Anti-venom+(4)';
        LeftOver := 'Anti-venom+(1)';
      end;
    'Anti-venom+(1)':
      begin
        Timer := 3 * ONE_MINUTE;
        Parent := 'Anti-venom+(4)';
        LeftOver := 'Vial';
      end;

    'Anti-venom(4)':
      begin
        Timer := 18 * ONE_SECOND;
        LeftOver := 'Anti-venom(3)';
      end;
    'Anti-venom(3)':
      begin
        Timer := 18 * ONE_SECOND;
        Parent := 'Anti-venom(4)';
        LeftOver := 'Anti-venom(2)';
      end;
    'Anti-venom(2)':
      begin
        Timer := 18 * ONE_SECOND;
        Parent := 'Anti-venom(4)';
        LeftOver := 'Anti-venom(1)';
      end;
    'Anti-venom(1)':
      begin
        Timer := 18 * ONE_SECOND;
        Parent := 'Anti-venom(4)';
        LeftOver := 'Vial';
      end;
  end;

  IsSetup := True;
end;

procedure TRSConsumable.SetupAntiFire;
begin
  if IsSetup then
    Exit;

  Parent := 'Null';
  LeftOver := 'Null';

  case Item of
    'Antifire potion(4)':
      begin
        Timer := 6 * ONE_MINUTE;
        LeftOver := 'Antifire potion(3)';
      end;
    'Antifire potion(3)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Antifire potion(4)';
        LeftOver := 'Antifire potion(2)';
      end;
    'Antifire potion(2)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Antifire potion(4)';
        LeftOver := 'Antifire potion(1)';
      end;
    'Antifire potion(1)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Antifire potion(4)';
        LeftOver := 'Vial';
      end;

    'Super antifire potion(4)':
      begin
        Timer := 3 * ONE_MINUTE;
        LeftOver := 'Super antifire potion(3)';
      end;
    'Super antifire potion(3)':
      begin
        Timer := 3 * ONE_MINUTE;
        Parent := 'Super antifire potion(4)';
        LeftOver := 'Super antifire potion(2)';
      end;
    'Super antifire potion(2)':
      begin
        Timer := 3 * ONE_MINUTE;
        Parent := 'Super antifire potion(4)';
        LeftOver := 'Super antifire potion(1)';
      end;
    'Super antifire potion(1)':
      begin
        Timer := 3 * ONE_MINUTE;
        Parent := 'Super antifire potion(4)';
        LeftOver := 'Vial';
      end;

    'Extended antifire(4)':
      begin
        Timer := 12 * ONE_MINUTE;
        LeftOver := 'Extended antifire(3)';
      end;
    'Extended antifire(3)':
      begin
        Timer := 12 * ONE_MINUTE;
        Parent := 'Extended antifire(4)';
        LeftOver := 'Extended antifire(2)';
      end;
    'Extended antifire(2)':
      begin
        Timer := 12 * ONE_MINUTE;
        Parent := 'Extended antifire(4)';
        LeftOver := 'Extended antifire(1)';
      end;
    'Extended antifire(1)':
      begin
        Timer := 12 * ONE_MINUTE;
        Parent := 'Extended antifire(4)';
        LeftOver := 'Vial';
      end;

    'Extended super antifire(4)':
      begin
        Timer := 6 * ONE_MINUTE;
        LeftOver := 'Extended super antifire(3)';
      end;
    'Extended super antifire(3)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Extended super antifire(4)';
        LeftOver := 'Extended super antifire(2)';
      end;
    'Extended super antifire(2)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Extended super antifire(4)';
        LeftOver := 'Extended super antifire(1)';
      end;
    'Extended super antifire(1)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Extended super antifire(4)';
        LeftOver := 'Vial';
      end;
  end;

  IsSetup := True;
end;

procedure TRSConsumable.SetupBoost;
begin
  if IsSetup then
    Exit;

  Parent := 'Null';
  LeftOver := 'Null';

  case Item of
    'Super combat potion(4)':
      begin
        Timer := 6 * ONE_MINUTE;
        LeftOver := 'Super combat potion(3)';
      end;
    'Super combat potion(3)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Super combat potion(4)';
        LeftOver := 'Super combat potion(2)';
      end;
    'Super combat potion(2)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Super combat potion(4)';
        LeftOver := 'Super combat potion(1)';
      end;
    'Super combat potion(1)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Super combat potion(4)';
        LeftOver := 'Vial';
      end;

    'Super attack potion(4)':
      begin
        Timer := 6 * ONE_MINUTE;
        LeftOver := 'Super attack potion(3)';
      end;
    'Super attack potion(3)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Super attack potion(4)';
        LeftOver := 'Super attack potion(2)';
      end;
    'Super attack potion(2)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Super attack potion(4)';
        LeftOver := 'Super attack potion(1)';
      end;
    'Super attack potion(1)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Super attack potion(4)';
        LeftOver := 'Vial';
      end;


    'Super strength potion(4)':
      begin
        Timer := 6 * ONE_MINUTE;
        LeftOver := 'Super strength potion(3)';
      end;
    'Super strength potion(3)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Super strength potion(4)';
        LeftOver := 'Super strength potion(2)';
      end;
    'Super strength potion(2)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Super strength potion(4)';
        LeftOver := 'Super strength potion(1)';
      end;
    'Super strength potion(1)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Super strength potion(4)';
        LeftOver := 'Vial';
      end;

    'Bastion potion(4)':
      begin
        Timer := 6 * ONE_MINUTE;
        LeftOver := 'Bastion potion(3)';
      end;
    'Bastion potion(3)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Bastion potion(4)';
        LeftOver := 'Bastion potion(2)';
      end;
    'Bastion potion(2)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Bastion potion(4)';
        LeftOver := 'Bastion potion(1)';
      end;
    'Bastion potion(1)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Bastion potion(4)';
        LeftOver := 'Vial';
      end;

    'Ranging potion(4)':
      begin
        Timer := 6 * ONE_MINUTE;
        LeftOver := 'Ranging potion(3)';
      end;
    'Ranging potion(3)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Ranging potion(4)';
        LeftOver := 'Ranging potion(2)';
      end;
    'Ranging potion(2)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Ranging potion(4)';
        LeftOver := 'Ranging potion(1)';
      end;
    'Ranging potion(1)':
      begin
        Timer := 6 * ONE_MINUTE;
        Parent := 'Ranging potion(4)';
        LeftOver := 'Vial';
      end;
  end;

  IsSetup := True;
end;




function TRSItemArray.Find(const Value: TRSItem): Integer; constref;
begin
  for Result := 0 to High(Self) do
    if (Value = Self[Result]) then
      Exit;

  Result := -1;
end;

procedure TRSItemArray.Reverse;
var
  tmp:TRSItem;
  lo,hi:^TRSItem;
begin
  if (Length(Self) = 0) then
    Exit();

  lo := @Self[0];
  hi := @Self[High(self)];
  while (PtrUInt(lo)<PtrUInt(hi)) do
  begin
    tmp := hi^;
    hi^ := lo^;
    lo^ := tmp;
    dec(hi);
    inc(lo);
  end;
end;

function TRSItemArray.Reversed: TRSItemArray;
var
  lo:PtrUInt;
  p,r:^TRSItem;
begin
  if (Length(Self) = 0) then
    Exit();

  SetLength(Result,length(self));
  p := @Self[high(self)];
  r := @Result[0];

  lo := PtrUInt(@Self[0]);
  while (lo<=PtrUInt(p)) do
  begin
    r^ := p^;
    dec(p);
    inc(r);
  end;
end;

procedure TRSItemArray.Extend(Arr:TRSItemArray);
var L:Int32;
begin
  if Length(arr) > 0 then
  begin
    L := Length(Self);
    SetLength(Self, Length(Arr) + L);
    MemMove(Arr[0],Self[L],Length(Arr)*SizeOf(Integer));
  end;
end;


function TRSConsumable.LeftOverIsTrash: Boolean;
begin
  Result := TRASH_ARRAY.Find(LeftOver) > -1;
end;

function TRSConsumable.IsParent: Boolean;
begin
  Result := Parent = 'Null';
end;

function TRSConsumable.IsLast: Boolean;
begin
  Result := (LeftOver = 'Null') or Self.LeftOverIsTrash;
end;

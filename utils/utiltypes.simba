{$DEFINE WL_UTILTYPES_INCLUDED}
{$IFNDEF WL_UTILS}
  {$I WaspLib/utils.simba}
{$ENDIF}
(*
Utility types, contants and variables
=====================================

This file contains types, contants and variables that need to be pre-loaded for wasplib to compile.
*)

type
(*
type EWLBankLocation
~~~~~~~~~~~~~~~~~~~~

EWLBankLocation is a enumerator that contains all bank locations supported by WaspLib.
*)
  EWLBankLocation = (
    AL_KHARID_BANK,
    ARDOUGNE_NORTH_BANK,
    ARDOUGNE_SOUTH_BANK,
    CASTLE_WARS_BANK,
    CATHERBY_BANK,
    CRAFT_GUILD_BANK,
    DRAYNOR_BANK,
    EDGEVILLE_BANK,
    FALADOR_EAST_BANK,
    FALADOR_WEST_BANK,
    GRAND_EXCHANGE_BANK,
    LUNAR_ISLAND_BANK,
    MINING_GUILD_BANK,
    PRIFDDINNAS_BANK,
    SEERS_BANK,
    TZHAAR_BANK,
    VARROCK_EAST_BANK,
    VARROCK_WEST_BANK,
    WINTERTODT_BANK
  );

const
(*
const BANK_LOCATION_ARRAY
~~~~~~~~~~~~~~~~~~~~~~~~~

Constant array of strings containing the human readable name of each bank.
Mostly used as a link to EWLBankLocation so bank locations should be in the same order.
*)
  BANK_LOCATION_ARRAY: TStringArray = [
    'Al Kharid',
    'Ardougne North',
    'Ardougne South',
    'Castle Wars',
    'Catherby',
    'Craft Guild',
    'Draynor',
    'Edgeville',
    'Falador East',
    'Falador West',
    'Grand Exchange',
    'Lunar Island',
    'Mining Guild',
    'Prifddinnas',
    'Seers',
    'Tzhaar',
    'Varrock East',
    'Varrock West',
    'Wintertodt'
  ];

type
(*
type ERSConsumable
~~~~~~~~~~~~~~~~~~

ERSConsumable is a enumerator that contains all types of consumable.
*)
  ERSConsumable = (
    FOOD_CONSUMABLE,
    PRAYER_CONSUMABLE,
    ENERGY_CONSUMABLE,
    POISON_CONSUMABLE,
    VENOM_CONSUMABLE,
    ANTI_FIRE_CONSUMABLE,
    BOOST_CONSUMABLE
  );

const
(*
const FOOD_ARRAY
~~~~~~~~~~~~~~~~

Global FOOD_ARRAY constant.
This array holds all types of consumable that heal the player.
*)
  FOOD_ARRAY: TRSItemArray = [
    'Shrimps', 'Cooked chicken', 'Cooked meat', 'Sardine', 'Edible seaweed', 'Bread', 'Herring',
    'Mackerel', 'Choc-ice', 'Trout', 'Cod', 'Pike', 'Roast beast meat',
    'Pineapple punch', 'Salmon', 'Tuna', 'Jug of wine', 'Rainbow fish',
    'Stew', 'Banana stew',
    'Cake(1..3)',
    'Meat pie(1..2)',
    'Bass',
    'Plain pizza(1..2)',
    'Lobster', 'Swordfish', 'Potato with butter',
    'Apple pie(1..2)',
    'Chocolate cake(1..3)',
    'Tangled toad''s legs', 'Chocolate bomb', 'Potato with cheese',
    'Meat pizza(1..2)',
    'Admiral pie(1..2)',
    'Monkfish',
    'Anchovy pizza(1..2)',
    'Cooked karambwan', 'Curry', 'Ugthanki kebab',
    'Guthix rest(1..4)',
    'Dragonfruit pie(1..2)',
    'Mushroom potato', 'Shark', 'Sea turtle',
    'Pineapple pizza(1..2)',
    'Summer pie(1..2)',
    'Wild pie(1..2)',
    'Manta ray', 'Tuna potato', 'Dark crab', 'Anglerfish',
    'Saradomin brew(1..4)'
  ];

(*
const PRAYER_ARRAY
~~~~~~~~~~~~~~~~~~

Global PRAYER_ARRAY constant.
This array holds all types of consumable that refill prayer.
*)
  PRAYER_ARRAY: TRSItemArray = [
    'Zamorak brew(1..4)',
    'Sanfew serum(1..4)',
    'Super restore(1..4)',
    'Prayer potion(1..4)',
    'Jangerberries'
  ];

(*
const ENERGY_ARRAY
~~~~~~~~~~~~~~~~~~

Global ENERGY_ARRAY constant.
This array holds all types of consumable that refill energy.
*)
  ENERGY_ARRAY: TRSItemArray = [
    'White tree fruit',
    'Winter sq''irkjuice', 'Spring sq''irkjuice',
    'Autumn sq''irkjuice', 'Summer sq''irkjuice',
    'Bandages',
    'Guthix rest(1..4)',
    'Papaya fruit',
    'Energy potion(1..4)',
    'Purple sweets',
    'Summer pie(1..2)',
    'Super energy(1..4)',
    'Stamina potion(1..4)',
    'Strange fruit', 'Mint cake', 'Gout tuber'
  ];

(*
const ANTI_POISON_ARRAY
~~~~~~~~~~~~~~~~~~~~~~~

Global ANTI_POISON_ARRAY constant.
This array holds all types of consumable that heal poison.
*)
  ANTI_POISON_ARRAY: TRSItemArray = [
    'Sanfew serum(1..4)',
    'Anti-venom+(1..4)',
    'Anti-venom(1..4)',
    'Antidote++(1..4)',
    'Antidote+(1..4)',
    'Superantipoison(1..4)',
    'Antipoison(1..4)'
  ];

(*
const ANTI_VENOM_ARRAY
~~~~~~~~~~~~~~~~~~~~~~

Global ANTI_VENOM_ARRAY constant.
This array holds all types of consumable that heal venom.
*)
  ANTI_VENOM_ARRAY: TRSItemArray = [
    'Anti-venom+(1..4)',
    'Anti-venom(1..4)'
  ];

(*
const ANTI_FIRE_ARRAY
~~~~~~~~~~~~~~~~~~~~~

Global ANTI_FIRE_ARRAY constant.
This array holds all types of consumable that protect from dragonfire.
*)
  ANTI_FIRE_ARRAY: TRSItemArray = [
    'Antifire potion(1..4)',
    'Super antifire potion(1..4)',
    'Extended antifire(1..4)',
    'Extended super antifire(1..4)'
  ];

(*
const BOOST_ARRAY
~~~~~~~~~~~~~~~~~

Global BOOST_ARRAY constant.
This array holds all types of consumable that boost the player stats.
*)
  BOOST_ARRAY: TRSItemArray = [
    'Super combat potion(1..4)',
    'Super attack(1..4)',
    'Super strength(1..4)',
    'Bastion potion(1..4)',
    'Ranging potion(1..4)'
  ];

(*
const TRASH_ARRAY
~~~~~~~~~~~~~~~~~

Global TRASH_ARRAY constant.
This array holds all types of trash items left over from eating/drinking certain types of consumables.
*)
  TRASH_ARRAY: TRSItemArray = [
    'Cocktail glass',
    'Jug',
    'Bowl',
    'Pie dish',
    'Vial',
    'Beer glass',
    'Empty cup'
  ];

type
  WLSettings = record
  class var
    MaxActions: Int32;
    MaxTime:    Int64;

    Breaks: Boolean;
    Sleep:
      record
        Enabled: Boolean;

        Hour: String;
        HourOverride: String;

        Length: Double;
        LengthOverride: Double;
      end;
    Antiban:
      record
        Enabled:  Boolean;

        Camera:   Boolean;
        Mouse:    Boolean;
        Chat:     Boolean;
        GameTabs: Boolean;
        Bank:     Boolean;
      end;

    TextReport: Boolean;

    RemoteInput:
      record
        Enabled: Boolean;
        BlockInput: Boolean;
        HUDReport: Boolean;
        ScriptDebug: Boolean;
      end;

    Stats: Boolean;

    BankLocation: EWLBankLocation;
  end;

begin
  WLSettings.MaxActions  := -1;
  WLSettings.MaxTime     := -1;

  WLSettings.Breaks        := True;
  WLSettings.Sleep.Enabled := True;
  WLSettings.Antiban       := [True, True, True, True, True, True];

  WLSettings.TextReport  := True;
  WLSettings.RemoteInput := [True, False, True, False];

  WLSettings.Stats       := True;

  WLSettings.BankLocation := GRAND_EXCHANGE_BANK
end;

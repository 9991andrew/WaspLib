
Anvil
==========
Methods to interact with the Anvil.


------------

  TRSAnvil.GetSlots

  I though of doing something similar to Bank.FindItemBoundaries but I think
  this is better since I don't get duplicate boxes overlapping.

  The only static coordinates in the anvil menu are the Item name and bar amount.
  This uses the item name to figure out the slots boxes.

  Te actual slots width is 79 but the last column can overlap the previous one
  if it exists so I use a width of 50 instead to not overcomplicate things.
  This could be changed to every column having width of 70 except the last 2 but
  this as is works in every scenario without overcomplicate things.


------------

Anvil.Close
~~~~~~~~~~
.. code-block:: pascal

 function TRSAnvil.Close(PressEscape: Boolean = False): Boolean;

Closes the anvil, Depending on `PressEscape` the function will either click the button
or press backspace.

Example
-------
.. code-block:: pascal  

 WriteLn Anvil.Close();


------------

Anvil.Setup
~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure Anvil.Setup;

Initializes Anvil variables.

.. note:: This is automatically called on the **Anvil** variable.


------------

var Anvil
~~~~~~~~~~~~~~
  Global Anvil variable.


------------

{$DEFINE WL_SCRIPTCONFIG_INCLUDED}
{$IFNDEF WL_UTILS}
  {$I WaspLib/utils.simba}
{$ENDIF}
{$IFHASFILE credentials.simba}{$I credentials.simba}{$ENDIF}

type
  EWaspBankLocation = (
    AL_KHARID,
    ARDOUGNE_NORTH,
    ARDOUGNE_SOUTH,
    CASTLE_WARS,
    CATHERBY,
    CRAFT_GUILD,
    DRAYNOR,
    EDGEVILLE,
    FALADOR_EAST,
    FALADOR_WEST,
    GRAND_EXCHANGE,
    LUNAR_ISLAND,
    MINING_GUILD,
    PRIFDDINNAS,
    SEERS,
    TZHAAR,
    VARROCK_EAST,
    VARROCK_WEST,
    WINTERTODT
  );

const
  BankLocationStrings: TStringArray = [
    'Al Kharid',
    'Ardougne North',
    'Ardougne South',
    'Castle Wars',
    'Catherby',
    'Craft Guild',
    'Draynor',
    'Edgeville',
    'Falador East',
    'Falador West',
    'Grand Exchange',
    'Lunar Island',
    'Mining Guild',
    'Prifddinnas',
    'Seers',
    'Tzhaar',
    'Varrock East',
    'Varrock West',
    'Wintertodt'
  ];

var
  CurrentBankLocation: EWaspBankLocation := EWaspBankLocation.GRAND_EXCHANGE;

const
  CREDENTIALS_FILE = AppPath + 'credentials.simba';

type
  TScriptConfig = record
    Form: TForm;

    AccountManagerPanel:  TPanel;
    AccountLabel:         TLabel;
    AccountSelector:      TLabeledCombobox;
    AccountAddButton:     TButton;
    AccountSaveButton:    TButton;
    AccountDeleteButton:  TButton;

    AccountUser:          TLabeledEdit;
    AccountPass:          TLabeledEdit;
    AccountPin:           TLabeledEdit;
    AccountWorlds:        TLabeledMemo;

    AntibanPanel:         TPanel;
    AntibanSettingsLabel: TLabel;
    AntibanState:         TLabeledCheckbox;
    BreaksState:          TLabeledCheckbox;
    SleepsState:          TLabeledCheckbox;
    AdvancedABButton:     TButton;
    AdvancedEnabled:      Boolean;
    ABCameraState:        TLabeledCheckbox;
    ABMouseState:         TLabeledCheckbox;
    ABChatState:          TLabeledCheckbox;
    ABGameTabsState:      TLabeledCheckbox;
    ABBankState:          TLabeledCheckbox;

    SleepHourEdit:        TLabeledEdit;
    SleepLengthEdit:      TLabeledEdit;

    ScriptSettingsPanel:  TPanel;
    ScriptSettingsLabel:  TLabel;

    ActionLimit:          TLabeledEdit;
    TimeLimit:            TLabeledEdit;
    RemoteInputState:     TLabeledCheckbox;
    ProgressReportState:  TLabeledCheckbox;
    ScriptDebugState:     TLabeledCheckbox;
    StartButton:          TButton;

    ScriptPanel:          TPanel;
  end;

  TBankConfig = record(TScriptConfig)
    BankSelector: TLabeledCombobox;
  end;


function TScriptConfig.BuildCredentials: String;
var
  Player: TRSLoginPlayer;
  World: Int32;
begin
  Result := 'begin'#13#10'';
  for Player in Login.Players do
  begin
    Result += '  Login.AddPlayer('#13#10'';
    Result += '    ''' + Player.User + ''','#13#10'';
    Result += '    ''' + Player.Password + ''','#13#10'';
    Result += '    ''' + Player.Pin + ''','#13#10'';

    Result += '    [';

    for World in Player.Worlds do
    begin
      Result += ToStr(World);
      if World <> Player.Worlds[High(Player.Worlds)] then
        Result += ', ';
    end;

    Result += ']'#13#10'';

    Result += '  );'#13#10'';
    Result += ''#13#10''
  end;
  Result += 'end;';
end;

procedure TScriptConfig.RewriteCredentials;
var
  FileHandle: Int32;
begin
  try
    if FileExists(CREDENTIALS_FILE) then
      CloseFile(RewriteFile(CREDENTIALS_FILE, True))
    else
      CloseFile(CreateFile(CREDENTIALS_FILE));

    FileHandle := AppendFile(CREDENTIALS_FILE);

    WriteFileString(FileHandle, Self.BuildCredentials);

    CloseFile(FileHandle);
  except
    Writeln(GetExceptionMessage);
    Writeln('It''s possible you lost your saved accounts!');
  end;
end;


procedure TScriptConfig.ClearInputs(Sender: TObject);
begin
  Writeln(Sender.ToString + ' clearing inputs');

  AccountUser.setText('');
  AccountPass.setText('');
  AccountPin.setText('');
  AccountWorlds.SetText('');
end;

procedure TScriptConfig.FillInputs(Sender: TObject);
var
  Idx: Int32 := Login.PlayerIndex;
  i: Int32;
  WorldsStr: String;
begin
  Writeln(Sender.ToString + ' auto filling inputs');

  AccountUser.setText(Login.Players[Idx].User);
  AccountPass.setText(Login.Players[Idx].Password);
  AccountPin.setText(Login.Players[Idx].Pin);

  for i := 0 to High(Login.Players[Idx].Worlds) do
  begin
    WorldsStr += ToStr(Login.Players[Idx].Worlds[i]);
    if i < High(Login.Players[Idx].Worlds) then
      WorldsStr += ', ';
  end;

  AccountWorlds.SetText(WorldsStr);
end;


procedure TScriptConfig.ReloadSelector(Sender: TObject);
var
  Player: TRSLoginPlayer;
begin
  Writeln(Sender, ' is reloading.');

  AccountSelector.Clear;

  if Login.Players <> [] then
  begin
    for Player in Login.Players do
      AccountSelector.AddItem(Player.User);
    AccountSelector.SetItemIndex(Login.PlayerIndex);
  end;

  AccountSelector.AddItem('New user');
end;



procedure TScriptConfig.OnAddClick(Sender: TObject);
var
  Worlds: TIntegerArray;
  Str: String;
  Ext: Extended;
begin
  Str := AccountWorlds.GetText;
  for Ext in Str.ExtractNumbers do
    Worlds += Round(Ext);

  Login.Players += [AccountUser.GetText, AccountPass.GetText, AccountPin.GetText, Worlds];

  Self.RewriteCredentials;
  Self.ReloadSelector(Sender);
end;

procedure TScriptConfig.OnSaveClick(Sender: TObject);
var
  Worlds: TIntegerArray;
  Str: String;
  ExtArray: TExtendedArray;
  Ext: Extended;
  Idx: Int32;
begin
  Idx := AccountSelector.getItemIndex;
  if Idx > High(Login.Players) then
  begin
    Self.OnAddClick(Sender);
    Exit;
  end;

  Str := AccountWorlds.GetText;
  ExtArray := Str.ExtractNumbers;
  for Ext in ExtArray do
    Worlds += Round(Ext);

  if Idx = -1 then
    Login.Players += [AccountUser.GetText, AccountPass.GetText, AccountPin.GetText, Worlds]
  else
    Login.Players[Idx] := [AccountUser.GetText, AccountPass.GetText, AccountPin.GetText, Worlds];

  Self.RewriteCredentials;
  Self.ReloadSelector(Sender);
end;

procedure TScriptConfig.OnDeleteClick(Sender: TObject);
var
  Idx: Int32;
begin
  Idx := AccountSelector.getItemIndex;

  Writeln(Idx);
  Writeln(High(Login.Players));

  if Idx > High(Login.Players) then
    Exit;
  Delete(Login.Players, Idx, 1);
  Login.PlayerIndex -= 1;


  Self.ClearInputs(Sender);

  Self.RewriteCredentials;
  Self.ReloadSelector(Sender);
end;


procedure TScriptConfig.SelectorOnChange(Sender: TObject);
var
  Idx: Int32;
begin
  Idx := AccountSelector.GetItemIndex;
  if Idx = -1 then
  begin
    Login.PlayerIndex := 0;
    Self.ClearInputs(Sender);
  end
  else if (Idx > High(Login.Players)) then
  begin
    Login.PlayerIndex := Idx;
    Self.ClearInputs(Sender);
  end
  else
  begin
    Login.PlayerIndex := Idx;
    Self.FillInputs(Sender);
  end;

  Antiban.SetupBiometrics;
  Antiban.SetSleepHour;
  Antiban.SetSleepLength;

  if SleepHourEdit.IsInitiated then
    SleepHourEdit.SetText(WLSettings.Sleep.Hour);
  if SleepLengthEdit.IsInitiated then
    SleepLengthEdit.SetText(ToStr(WLSettings.Sleep.Length / ONE_HOUR));
end;



procedure TScriptConfig.SelectorKey(Sender: TObject; var Key: char);
begin
  Key := #0;
  Self.SelectorOnChange(Sender);
end;

procedure TScriptConfig.NumberField(Sender: TObject; var Key: char);
begin
  Writeln(Sender.ToString + ' limiting input to numbers');
  if not (Key in ['0'..'9', #8, #9, '-']) then Key := #0;
end;

procedure TScriptConfig.WorldsKeyPress(Sender: TObject; var Key: char);
begin
  Writeln(Sender.ToString + ' limiting input to numbers commas and spaces');
  if not (Key in ['0'..'9', ',', ' ' ,#8, #9]) then Key := #0;
end;


procedure TScriptConfig.UpdateControlPositions;
begin
  AdvancedABButton.SetTop(AntibanPanel.getHeight - 35);

  ActionLimit.SetTop(ScriptSettingsPanel.getHeight - 85);
  TimeLimit.SetTop(ActionLimit.GetTop);
  RemoteInputState.SetTop(ActionLimit.GetTop + ActionLimit.GetHeight + 10);
  ProgressReportState.SetTop(RemoteInputState.GetTop);
  ScriptDebugState.SetTop(RemoteInputState.GetTop);
  StartButton.SetTop(ScriptSettingsPanel.getHeight - 35);
end;

procedure TScriptConfig.UpdateFormSize(Width, Height: Int32);
begin
  Form.setWidth(Width);
  AccountManagerPanel.setLeft(0);
  AccountManagerPanel.setWidth(Width);
  AntibanPanel.setLeft(0);
  AntibanPanel.setWidth(Round(Form.getWidth/4));
  ScriptSettingsPanel.SetLeft(AntibanPanel.getLeft + AntibanPanel.getWidth);
  ScriptSettingsPanel.setWidth(Form.getWidth - AntibanPanel.getWidth);

  Form.SetHeight(Height);
  AccountManagerPanel.SetTop(0);
  AccountManagerPanel.SetHeight(200);
  AntibanPanel.SetTop(AccountManagerPanel.GetTop + AccountManagerPanel.getHeight);
  AntibanPanel.SetHeight(Form.getHeight - (AccountManagerPanel.getTop + AccountManagerPanel.getHeight));
  ScriptSettingsPanel.SetTop(AntibanPanel.GetTop);
  ScriptSettingsPanel.SetHeight(Form.getHeight - (AccountManagerPanel.getTop + AccountManagerPanel.getHeight));

  Self.UpdateControlPositions;
end;


procedure TScriptConfig.ShowAdvanced(Sender: TObject);
begin
  Writeln(ToStr(Sender) + ' was clicked.');
  AdvancedEnabled := not AdvancedEnabled;

  ABCameraState.SetVisible(AdvancedEnabled);
  ABMouseState.SetVisible(AdvancedEnabled);
  ABChatState.SetVisible(AdvancedEnabled);
  ABGameTabsState.SetVisible(AdvancedEnabled);
  ABBankState.SetVisible(AdvancedEnabled);
  SleepHourEdit.SetVisible(AdvancedEnabled);
  SleepLengthEdit.SetVisible(AdvancedEnabled);

  if AdvancedEnabled then
  begin
    Self.UpdateFormSize(Form.getWidth, Form.getHeight + 230);
    AdvancedABButton.SetCaption('Show less');
  end
  else
  begin
    Self.UpdateFormSize(Form.getWidth, Form.getHeight - 230);
    AdvancedABButton.SetCaption('Show more');
  end;

end;


procedure TScriptConfig.RemoteInputOnChange(Sender: TObject);
var
  Checked: Boolean;
begin
  Writeln(ToStr(Sender) + ' was changed.');

  Checked := RemoteInputState.Checkbox.getState = cbChecked;

  ProgressReportState.Checkbox.SetEnabled(Checked);
  ScriptDebugState.Checkbox.SetEnabled(Checked);
end;

procedure TScriptConfig.DebugOnChange(Sender: TObject);
begin
  Writeln(ToStr(Sender) + ' was changed.');

  ProgressReportState.Checkbox.SetEnabled(ScriptDebugState.Checkbox.getState <> cbChecked);
end;


procedure TScriptConfig.Setup; //override me to add stuff!
begin
  with Form do
  begin
    Form.Init(nil);
    SetCaption('Script Configuration');
    SetWidth(650);
    SetHeight(400);
    SetPosition(poScreenCenter);
  end;

  //Setup account manager
  begin
    with AccountManagerPanel do
    begin
      Init(Form);
      SetParent(Form);
      SetLeft(0);
      SetTop(0);
      setHeight(200);
      setWidth(Form.getWidth);
    end;

    with AccountLabel do
    begin
      Init(AccountManagerPanel);
      SetParent(AccountManagerPanel);
      SetCaption('Account Manager');
      SetLeft(20);
      SetTop(5);
      SetWidth(150);
      GetFont().SetSize(12);
    end;

    with AccountSelector do
    begin
      Init(AccountManagerPanel);
      SetCaption('Current account:');
      SetLeft(AccountLabel.getLeft);
      SetTop(AccountLabel.GetTop + AccountLabel.getHeight + 5);
      Combobox.setStyle(csDropDownList);
      SetWidth(250);

      Combobox.SetOnChange(@Self.SelectorOnChange);
    end;

    Self.ReloadSelector(AccountSelector.Combobox);

    with AccountUser do
    begin
      Init(AccountManagerPanel);
      SetCaption('Username:');
      SetLeft(AccountSelector.GetLeft);
      SetTop(AccountSelector.GetTop + AccountSelector.GetHeight -20);
      SetWidth(AccountSelector.GetWidth);
    end;

    with AccountPass do
    begin
      Init(AccountManagerPanel);
      SetCaption('Password:');
      SetLeft(AccountUser.GetLeft);
      SetTop(AccountUser.GetTop + AccountUser.GetHeight + 5);
      SetWidth(150);
      Edit.setPasswordChar('*');
    end;

    with AccountPin do
    begin
      Init(AccountManagerPanel);
      SetCaption('Bank pin:');
      SetLeft(AccountPass.GetLeft + AccountPass.GetWidth + 10);
      SetTop(AccountPass.GetTop);
      SetWidth((AccountSelector.GetLeft + AccountSelector.GetWidth) - GetLeft);
      Edit.setPasswordChar('*');
      Edit.setMaxLength(4);
      Edit.setOnKeyPress(@Self.NumberField);
    end;

    with AccountWorlds do
    begin
      Init(AccountManagerPanel);
      SetCaption('Worlds (separated by commas):');
      SetLeft(AccountSelector.GetLeft + AccountSelector.GetWidth + 25);
      SetTop(AccountSelector.GetTop);
      SetHeight(AccountUser.GetTop - 3);
      SetWidth(AccountUser.GetWidth);

      Memo.setOnKeyPress(@Self.WorldsKeyPress);
    end;


    with AccountSaveButton do
    begin
      Init(AccountManagerPanel);
      SetParent(AccountManagerPanel);
      SetCaption('Save');
      SetLeft(AccountWorlds.GetLeft + 40);
      SetTop(AccountWorlds.GetTop + AccountWorlds.GetHeight + 5);
      SetWidth(50);

      setOnClick(@Self.OnSaveClick);
    end;

    with AccountAddButton do
    begin
      Init(AccountManagerPanel);
      SetParent(AccountManagerPanel);
      SetCaption('Add');
      SetLeft(AccountSaveButton.getLeft + AccountSaveButton.getWidth + 5);
      SetTop(AccountSaveButton.GetTop);
      SetWidth(50);

      setOnClick(@Self.OnAddClick);
    end;

    with AccountDeleteButton do
    begin
      Init(AccountManagerPanel);
      SetParent(AccountManagerPanel);
      SetCaption('Delete');
      SetLeft(AccountAddButton.getLeft + AccountAddButton.getWidth + 5);
      SetTop(AccountAddButton.GetTop);
      SetWidth(50);

      setOnClick(@Self.OnDeleteClick);
    end;
  end;

  Self.SelectorOnChange(AccountSelector.Combobox);

  //Setup antiban panel
  begin
    with AntibanPanel do
    begin
      Init(Form);
      SetParent(Form);
      SetLeft(0);
      SetTop(AccountManagerPanel.GetTop + AccountManagerPanel.getHeight);
      SetHeight(Form.getHeight - (AccountManagerPanel.getTop + AccountManagerPanel.getHeight));
      SetWidth(Round(Form.getWidth/4));
    end;

    with AntibanSettingsLabel do
    begin
      Init(AntibanPanel);
      SetParent(AntibanPanel);
      SetCaption('Antiban Settings');
      SetLeft(20);
      SetTop(5);
      SetWidth(150);
      SetHeight(30);
      GetFont().SetSize(12);
    end;

    with AntibanState do
    begin
      Init(AntibanPanel);
      SetCaption('Antiban:');
      SetLeft(AntibanSettingsLabel.getLeft + 5);
      SetTop(AntibanSettingsLabel.getTop + AntibanSettingsLabel.getHeight + 15);
      SetWidth(50);
      SetHeight(10);
      SetEnabled(WLSettings.Antiban.Enabled);
    end;

    with BreaksState do
    begin
      Init(AntibanPanel);
      SetCaption('Short breaks:');
      SetLeft(AntibanSettingsLabel.getLeft + 5);
      SetTop(AntibanState.getTop + AntibanState.getHeight + 15);
      SetWidth(50);
      SetHeight(10);
      SetEnabled(WLSettings.Breaks);
    end;

    with SleepsState do
    begin
      Init(AntibanPanel);
      SetCaption('Sleep breaks:');
      SetLeft(AntibanSettingsLabel.getLeft + 5);
      SetTop(BreaksState.getTop + BreaksState.getHeight + 15);
      SetWidth(50);
      SetHeight(10);
      SetEnabled(WLSettings.Sleep.Enabled);
    end;


    with AdvancedABButton do
    begin
      Init(AntibanPanel);
      SetParent(AntibanPanel);
      SetCaption('Show more');
      SetLeft(AntibanPanel.getWidth - 155);
      SetTop(AntibanPanel.getHeight - 35);
      SetWidth(100);
      SetHeight(30);
      setOnClick(@Self.ShowAdvanced);
    end;

    AdvancedEnabled := False;

    //Advanced antiban
    with ABCameraState do
    begin
      Init(AntibanPanel);
      SetCaption('Camera:');
      SetLeft(AntibanSettingsLabel.getLeft + 5);
      SetTop(SleepsState.getTop + SleepsState.getHeight + 35);
      SetWidth(50);
      SetHeight(10);
      SetEnabled(WLSettings.Antiban.Camera);
      SetVisible(False);
    end;

    with ABMouseState do
    begin
      Init(AntibanPanel);
      SetCaption('Mouse:');
      SetLeft(AntibanSettingsLabel.getLeft + 5);
      SetTop(ABCameraState.getTop + ABCameraState.getHeight + 15);
      SetWidth(50);
      SetHeight(10);
      SetEnabled(WLSettings.Antiban.Mouse);
      SetVisible(False);
    end;

    with ABChatState do
    begin
      Init(AntibanPanel);
      SetCaption('Chat:');
      SetLeft(AntibanSettingsLabel.getLeft + 5);
      SetTop(ABMouseState.getTop + ABMouseState.getHeight + 15);
      SetWidth(50);
      SetHeight(10);
      SetEnabled(WLSettings.Antiban.Chat);
      SetVisible(False);
    end;

    with ABGameTabsState do
    begin
      Init(AntibanPanel);
      SetCaption('Gametabs:');
      SetLeft(AntibanSettingsLabel.getLeft + 5);
      SetTop(ABChatState.getTop + ABChatState.getHeight + 15);
      SetWidth(50);
      SetHeight(10);
      SetEnabled(WLSettings.Antiban.GameTabs);
      Title.setVisible(False);
      Checkbox.setVisible(False);
    end;

    with ABBankState do
    begin
      Init(AntibanPanel);
      SetCaption('Bank:');
      SetLeft(AntibanSettingsLabel.getLeft + 5);
      SetTop(ABGameTabsState.getTop + ABGameTabsState.getHeight + 15);
      SetWidth(50);
      SetHeight(10);
      SetEnabled(WLSettings.Antiban.Bank);
      SetVisible(False);
    end;

    with SleepHourEdit do
    begin
      Init(AntibanPanel);
      SetCaption('Aprox sleep hour' + STR_NEW_LINE + '(HH:MM:SS):');
      SetTop(ABBankState.getTop + ABBankState.getHeight + 15);
      Edit.SetTop(Edit.GetTop + 15);
      SetLeft(AntibanSettingsLabel.getLeft + 5);
      SetWidth(100);
      SetText(WLSettings.Sleep.Hour);
      SetVisible(False);
    end;

    with SleepLengthEdit do
    begin
      Init(AntibanPanel);
      SetCaption('Aprox sleep time:');
      SetLeft(AntibanSettingsLabel.getLeft + 5);
      SetTop(SleepHourEdit.getTop + SleepHourEdit.getHeight + 20);
      SetWidth(100);
      SetText(ToStr(WLSettings.Sleep.Length / ONE_HOUR));
      SetVisible(False);
    end;
  end;

  //Setup script settings
  begin
    with ScriptSettingsPanel do
    begin
      Init(Form);
      SetParent(Form);
      SetLeft(AntibanPanel.getLeft + AntibanPanel.getWidth);
      SetTop(AntibanPanel.getTop);
      SetHeight(Form.getHeight - (AccountManagerPanel.getTop + AccountManagerPanel.getHeight));
      SetWidth(Form.getWidth - AntibanPanel.getWidth);
    end;

    with ScriptSettingsLabel do
    begin
      Init(ScriptSettingsPanel);
      SetParent(ScriptSettingsPanel);
      SetCaption('Script Settings');
      SetLeft(20);
      SetTop(5);
      SetWidth(150);
      SetHeight(30);
      GetFont().SetSize(12);
    end;


    with ActionLimit do
    begin
      Init(ScriptSettingsPanel);
      SetCaption('Stop after (number of actions):');
      SetLeft(ScriptSettingsLabel.getLeft + 5);
      SetTop(ScriptSettingsPanel.getHeight - 85);
      SetWidth(165);
      SetText(ToStr(WLSettings.MaxActions));
      Edit.setOnKeyPress(@Self.NumberField);
    end;

    with TimeLimit do
    begin
      Init(ScriptSettingsPanel);
      SetCaption('Stop after (time in minutes):');
      SetLeft(ActionLimit.getLeft  + ActionLimit.GetWidth + 55);
      SetTop(ActionLimit.GetTop);
      SetWidth(150);
      SetText(ToStr(WLSettings.MaxTime));
      Edit.setOnKeyPress(@Self.NumberField);
    end;


    with RemoteInputState do
    begin
      Init(ScriptSettingsPanel);
      SetCaption('Remote Input:');
      SetLeft(ScriptSettingsLabel.getLeft + 5);
      SetTop(ActionLimit.GetTop + ActionLimit.GetHeight + 10);
      SetWidth(50);
      SetHeight(10);
      SetEnabled(WLSettings.RemoteInput.Enabled);
      Checkbox.setOnChange(@Self.RemoteInputOnChange);
    end;

    with ProgressReportState do
    begin
      Init(ScriptSettingsPanel);
      SetCaption('Progress report:');
      SetLeft(RemoteInputState.getLeft + RemoteInputState.GetWidth - 25);
      SetTop(RemoteInputState.GetTop);
      SetWidth(50);
      SetHeight(10);
      SetEnabled(WLSettings.RemoteInput.HUDReport);
    end;

    with ScriptDebugState do
    begin
      Init(ScriptSettingsPanel);
      SetCaption('Debug script:');
      SetLeft(ProgressReportState.GetLeft + ProgressReportState.GetWidth - 25);
      SetTop(RemoteInputState.GetTop);
      SetWidth(50);
      SetHeight(10);
      SetEnabled(WLSettings.RemoteInput.ScriptDebug);
      Checkbox.setOnChange(@Self.DebugOnChange);
    end;



    with StartButton do
    begin
      Init(ScriptSettingsPanel);
      SetParent(ScriptSettingsPanel);
      SetCaption('Start');
      SetLeft(ScriptSettingsPanel.getWidth - 55);
      SetTop(ScriptSettingsPanel.getHeight - 35);
      SetWidth(50);
      SetHeight(30);
    end;
  end;

  //override me to add stuff!
end;

procedure TScriptConfig.Init(Sender: TObject); //override me to add stuff!
begin
  Writeln(Sender.ToString + ' was clicked. Form will now be hidden.');

  WLSettings.Antiban.Enabled := AntibanState.Checkbox.getState = cbChecked;
  WLSettings.Breaks          := BreaksState.Checkbox.getState  = cbChecked;
  WLSettings.Sleep.Enabled   := SleepsState.Checkbox.getState  = cbChecked;

  WLSettings.Antiban.Camera   := ABCameraState.Checkbox.getState   = cbChecked;
  WLSettings.Antiban.Mouse    := ABMouseState.Checkbox.getState    = cbChecked;
  WLSettings.Antiban.Chat     := ABChatState.Checkbox.getState     = cbChecked;
  WLSettings.Antiban.GameTabs := ABGameTabsState.Checkbox.getState = cbChecked;
  WLSettings.Antiban.Bank     := ABBankState.Checkbox.getState     = cbChecked;

  WLSettings.Sleep.HourOverride := SleepHourEdit.GetText();
  WriteLn SRL.TimeStamp + ':[GUI]: Aprox sleep hour: ' + WLSettings.Sleep.HourOverride;

  WLSettings.Sleep.LengthOverride := StrToFloat(SleepLengthEdit.GetText());
  WriteLn SRL.TimeStamp + ':[GUI]: Aprox sleep length: ' + ToStr(WLSettings.Sleep.LengthOverride);

  WLSettings.RemoteInput.Enabled     := RemoteInputState.Checkbox.getState = cbChecked;
  WLSettings.RemoteInput.HUDReport   := (ProgressReportState.Checkbox.getState = cbChecked) and
                                        (ScriptDebugState.Checkbox.getState <> cbChecked);
  WLSettings.RemoteInput.ScriptDebug := ScriptDebugState.Checkbox.getState = cbChecked;

  WLSettings.MaxActions := StrToInt(Self.ActionLimit.GetText());
  if StrToInt64(TimeLimit.Edit.GetText()) > 0 then
    WLSettings.MaxTime := StrToInt64(TimeLimit.Edit.GetText()) * 60 * 1000;

  Form.Close();
  Writeln('Script starting...');

  //override me to add stuff!
end;

procedure TScriptConfig.Run;
begin
  try
    Form.ShowModal;
    Form.Free;
  except
    Writeln(GetExceptionMessage);
  end;
end;

procedure TBankConfig.BankSelectorOnChange(Sender: TObject);
begin
  Writeln(ToStr(Sender) + ' was changed.');

  CurrentBankLocation := EWaspBankLocation(
                           BankLocationStrings.Find(
                             BankSelector.Combobox.getText));
end;

procedure TBankConfig.Setup(Strs: TStringArray); overload;
var
  Str: String;
begin
  Self.Setup;

  Self.UpdateFormSize(Form.getWidth, Form.getHeight + 40);

  with BankSelector do
  begin
    Init(ScriptSettingsPanel);
    SetCaption('Bank location:');
    SetLeft(ScriptSettingsLabel.getLeft + 5);
    SetTop(ScriptSettingsLabel.getTop + ScriptSettingsLabel.getHeight);
    SetWidth(200);
    Combobox.setStyle(csDropDownList);
    for Str in Strs do
      AddItem(Str);
    Combobox.setItemIndex(Ord(CurrentBankLocation));
    Combobox.SetOnChange(@Self.BankSelectorOnChange);
  end;
end;


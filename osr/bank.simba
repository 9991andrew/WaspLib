{$DEFINE WL_BANK_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

// Tries to open a bank with the specified Color at the specified Tile.
// Returns true if bank or bankpin is open.
function TRSWalker.OpenBank(Tile: TPoint; Color: TCTS2Color): Boolean;
begin
  if Self.ClickRSObject(Tile, Color, ['Bank', 'booth', 'chest']) then
  begin
    Minimap.WaitPlayerMoving(500, 3000);
    Result := WaitUntil((Bank.IsOpen or BankPin.IsOpen), SRL.TruncatedGauss(50, 1500), 1000);
  end;
end;

// Same as above for multiple tiles.
function TRSWalker.OpenBank(Tiles: TPointArray; Color: TCTS2Color): Boolean; overload;
begin
  if Self.ClickRSObject(Tiles, Color, ['Bank', 'booth', 'chest']) then
  begin
    Minimap.WaitPlayerMoving(500, 3000);
    Result := WaitUntil((Bank.IsOpen or BankPin.IsOpen), SRL.TruncatedGauss(50, 1500), 1000);
  end;
end;

// Walks to the object, and tries to do the same as above while walking.
function TRSWalker.WalkOpenBank(Tile: TPoint; Color: TCTS2Color): Boolean;
begin
  if Self.WalkClickRSObject(Tile, Color, ['Bank', 'booth', 'chest']) then
  begin
    Minimap.WaitPlayerMoving(500, 3000);
    Result := WaitUntil((Bank.IsOpen or BankPin.IsOpen), SRL.TruncatedGauss(50, 1500), 1000);
  end;
end;

// Same as above for multiple tiles.
function TRSWalker.WalkOpenBank(Tiles: TPointArray; Color: TCTS2Color): Boolean; overload
begin
  if Self.WalkClickRSObject(Tiles, Color, ['Bank', 'booth', 'chest']) then
  begin
    Minimap.WaitPlayerMoving(500, 3000);
    Result := WaitUntil((Bank.IsOpen or BankPin.IsOpen), SRL.TruncatedGauss(50, 1500), 1000);
  end;
end;


// Tries to open the collect box at bank with the specified Color at the specified Tile.
// Returns true if collect box is open.
function TRSWalker.OpenCollect(Tile: TPoint; Color: TCTS2Color): Boolean;
begin
  if Self.SelectRSObjectOption(Tile, Color, ['Collect'],['Bank', 'booth', 'chest']) then
  begin
    Minimap.WaitPlayerMoving(500, 3000);
    Result := WaitUntil((CollectBox.IsOpen or BankPin.IsOpen), SRL.TruncatedGauss(50, 1500), 1000);
  end;
end;

// Same as above for multiple tiles.
function TRSWalker.OpenCollectBox(Tiles: TPointArray; Color: TCTS2Color): Boolean; overload;
begin
  if Self.SelectRSObjectOption(Tiles, Color, ['Collect'],['Bank', 'booth', 'chest']) then
  begin
    Minimap.WaitPlayerMoving(500, 3000);
    Result := WaitUntil((CollectBox.IsOpen or BankPin.IsOpen), SRL.TruncatedGauss(50, 1500), 1000);
  end;
end;

// Walks to the object, and tries to do the same as above while walking.
function TRSWalker.WalkOpenCollectBox(Tile: TPoint; Color: TCTS2Color): Boolean;
begin
  if Self.WalkSelectRSObjectOption(Tile, Color, ['Collect'],['Bank', 'booth', 'chest']) then
  begin
    Minimap.WaitPlayerMoving(500, 3000);
    Result := WaitUntil((CollectBox.IsOpen or BankPin.IsOpen), SRL.TruncatedGauss(50, 1500), 1000);
  end;
end;

// Same as above for multiple tiles.
function TRSWalker.WalkOpenCollectBox(Tiles: TPointArray; Color: TCTS2Color): Boolean; overload;
begin
  if Self.WalkSelectRSObjectOption(Tiles, Color, ['Collect'],['Bank', 'booth', 'chest']) then
  begin
    Minimap.WaitPlayerMoving(500, 3000);
    Result := WaitUntil((CollectBox.IsOpen or BankPin.IsOpen), SRL.TruncatedGauss(50, 1500), 1000);
  end;
end;


// Tries to open GE
function TRSWalker.OpenGE(South: Boolean): Boolean;
var
  Tiles: TPointArray;
begin
  if South then
    Tiles := WorldObjects.Tiles.GESouth
  else
    Tiles := WorldObjects.Tiles.GENorth;

  if Self.ClickRSObject(Tiles, WorldObjects.Colors.GEStructure, ['Exchange', 'Grand', 'booth']) then
  begin
    Minimap.WaitPlayerMoving(500, 3000);
    Result := WaitUntil((GrandExchange.IsOpen or BankPin.IsOpen), SRL.TruncatedGauss(50, 1500), 1000);
  end;
end;

// Tries to open GE with less info
function TRSWalker.OpenGE: Boolean; overload;
begin
  if Self.ClickRSObject(Self.GetClosestTile(WorldObjects.Tiles.GEExchange), WorldObjects.Colors.GEStructure, ['Exchange', 'Grand', 'booth']) then
  begin
    Minimap.WaitPlayerMoving(500, 3000);
    Result := WaitUntil((GrandExchange.IsOpen or BankPin.IsOpen), SRL.TruncatedGauss(50, 1500), 1000);
  end;
end;

// Walks to GE and attempts to open it while walking.
function TRSWalker.WalkOpenGE(South: Boolean): Boolean;
var
  Tiles: TPointArray;
begin
  if South then
    Tiles := WorldObjects.Tiles.GESouth
  else
    Tiles := WorldObjects.Tiles.GENorth;

  if Self.WalkClickRSObject(Tiles, WorldObjects.Colors.GEStructure, ['Exchange', 'Grand', 'booth']) then
  begin
    Minimap.WaitPlayerMoving(500, 3000);
    Result := WaitUntil((GrandExchange.IsOpen or BankPin.IsOpen), SRL.TruncatedGauss(50, 1500), 1000);
  end;
end;

// Walks to GE and attempts to open it while walking with less info.
function TRSWalker.WalkOpenGE: Boolean; overload;
begin
  if Self.WalkClickRSObject(Self.GetClosestTile(WorldObjects.Tiles.GEExchange), WorldObjects.Colors.GEStructure, ['Exchange', 'Grand', 'booth']) then
  begin
    Minimap.WaitPlayerMoving(500, 3000);
    Result := WaitUntil((GrandExchange.IsOpen or BankPin.IsOpen), SRL.TruncatedGauss(50, 1500), 1000);
  end;
end;




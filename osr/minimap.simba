{$DEFINE WL_MINIMAP_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}


procedure TRSMinimap.WaitMoving(DoAntiban: Boolean);
var
  Timeout, Countdown: TCountDown;
begin
  Timeout.Init(Round(SRL.TruncatedGauss(20000, 25000)));

  Countdown.Init(Round(SRL.TruncatedGauss(500, 1500)));
  Countdown.Timeout := GetTickCount() + Round(SRL.TruncatedGauss(2500, 3500));

  repeat
    //Self.CheckRunEnergy();

    if DoAntiban then
    begin
      Antiban.WalkerTasks;
      DoAntiban := False;
    end;

    if Minimap.IsPlayerMoving then
      Countdown.Restart();

    Wait(100);
  until Timeout.IsFinished() or Countdown.IsFinished() or (not Minimap.HasFlag or not Minimap.IsPlayerMoving(300));
end;

// SHOULD ADD TO SRL
function TRSMinimap.GetOrbLevel(Orb: TCircle): Int32; override;
begin
  Result := OCR.RecognizeNumber([Orb.X-35, Orb.Y-1, Orb.X-15, Orb.Y+9], TOCRShadowRule.Create(), RS_FONT_PLAIN_11);
end;

function TRSMinimap.GetSpecLevel: Int32;
begin
  Result := Self.GetOrbLevel(Self.GetSpecAttackCircle);
end;

function TRSMinimap.IsSpecEnabled: Boolean;
begin
  Result := SRL.CountColor(CTS2(8682326, 16, 0.03, 1.15), Self.GetSpecAttackCircle.Bounds) > 1;
end;

function TRSMinimap.IsSpecWeapon: Boolean;
begin
  Result := ((SRL.CountColor(CTS2(8480786, 19, 0.05, 1.36), Self.GetSpecAttackCircle.Bounds) > 0) or
            Self.IsSpecEnabled);
end;

function TRSMinimap.EnableSpec(MinSpec: Int32): Boolean;
var
  T: UInt64;
begin
  if not Self.IsSpecWeapon or (Self.GetSpecLevel < MinSpec) then
    Exit(False);

  Result := Self.IsSpecEnabled;
  if not Result then
  begin
    Mouse.Click(Self.GetSpecAttackCircle, MOUSE_LEFT);

    T := GetTickCount() + Round(SRL.TruncatedGauss(1000, 2000));
    while (T > GetTickCount()) do
    begin
      if Self.IsSpecEnabled() then
        Exit(True);

      Wait(0, 1000, wdLeft);
    end;
  end;
end;

function TRSMinimap.DisableSpec: Boolean;
var
  T: UInt64;
begin
  Result := not Self.IsSpecEnabled;

  if Result then
  begin
    Mouse.Click(Self.GetSpecAttackCircle, MOUSE_LEFT);

    T := GetTickCount() + Round(SRL.TruncatedGauss(1000, 2000));
    while (T > GetTickCount()) do
    begin
      if not Self.IsSpecEnabled() then
        Exit(True);

      Wait(0, 1000, wdLeft);
    end;
  end;
end;


function TRSMinimap.HasStamina: Boolean;
begin
  Result := SRL.CountColor(CTS0(2709951, 38), Self.GetRunCircle.Bounds) > 0;
end;


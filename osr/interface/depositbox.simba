{$DEFINE WL_DEPOSITBOX_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

function TRSDepositBox.Close(PressEscape: Boolean = False): Boolean; override;
begin
  if not Self.IsOpen then
    Exit(True);

  Result := MainScreen.CloseInterface(PressEscape);
end;

(*
TRSDepositBox.CountSlots
~~~~~~~~~~~~~~~~~~~~~~~~
.. pascal:: function TRSDepositBox.CountSlots(): Int32;

Counts the total number of individual items in the depositbox

.. note:: This is automatically called on the **Bank** variable.
*)
function TRSDepositBox.CountSlots(): Int32;
var
  Box: TBox;
  Pt: TPoint;
  TPA: TPointArray;
begin
  if not Self.IsOpen() then
    Exit;

  if SRL.FindColors(TPA, RS_ITEM_BORDER, Self.Bounds) > 0 then
    for Box in Self.GetSlotBoxes() do
      for Pt in TPA do
        if Pt.InBox(Box) then
        begin
          Inc(Result);
          break;
        end;
end;

function TRSDepositBox.IsFull(): Boolean;
begin
  Result := Self.CountSlots() = 28;
end;

function TRSDepositBox.IsEmpty(): Boolean;
var
  tpa: TPointArray;
begin
  Result := SRL.FindColors(tpa, RS_ITEM_BORDER, Self.Bounds()) = 0
end;


function TRSDepositBox.CountItem(item: TRSItem): Int32;
begin
  if not Self.IsOpen() then
    Exit;

  Result := Self.ItemFinder.Count(item);
end;

function TRSDepositBox.DepositAll(): Boolean;
begin
  if Self.IsEmpty() then
    Exit(True);

  Self.ElementFinder.Click(Self.ELEMENT_DEPOSIT_INVENTORY);

  Result := WaitUntil(Self.IsEmpty(), 100, 2000);
end;



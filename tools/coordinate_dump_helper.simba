{$DEFINE SRL_DISABLE_REMOTEINPUT}
{$I SRL-T/osr.simba}
{$I WaspLib/osr.simba}

const
  COLOR_ANVIL              = $A0A0FF;
  COLOR_WOOD_BANK_CHEST    = $B0B0B0;
  COLOR_BANK_CHEST_REGULAR = $60FFFF;
  COLOR_DEPOSIT_BOX1       = $8080FF;
  COLOR_DEPOSIT_BOX2       = $9090FF;
  COLOR_STONEWOOD_BANK1    = $30FFFF;
  COLOR_STONEWOOD_BANK2    = $50FFFF;
  COLOR_WOOD_BANK          = $40FFFF;
  COLOR_UNSPECIFIED_BANK   = $B0FFFF;

  COLOR_OAK_TREE           = $10FF10;
  COLOR_WILLOW_TREE        = $20FF20;
  COLOR_TEAK_TREE          = $30FF30;
  COLOR_MAPLE_TREE         = $40FF40;
  COLOR_MAHOGANY_TREE      = $FF5050;
  COLOR_YEW_TREE           = $FF6060;
  COLOR_MAGIC_TREE         = $FF7070;

var
  bitmap: TMufasaBitmap;
  tpa: TPointArray;
  rplc: String;
begin
  bitmap.Init();

  rplc := 'tools' + DirectorySeparator + 'map-object-coords.png'; //unzip it first.
  bitmap.LoadFromFile(WL_WALKER_MAP.Replace('map.png', rplc));

  bitmap.FindColors(tpa, COLOR_UNSPECIFIED_BANK);
  //Visualize it by uncommenting the lines below. There's a small chance simba crashes if there's too many points.
  //bitmap.DrawTPA(tpa.Connect().Grow(1), $FFFFFF);
  //bitmap.Debug();
  WriteLn tpa.ToString();
  bitmap.Free();
end.


(*
//Validate a coordinate if you want to be sure it's within a printed array:
{$I SRL-T/osr.simba}
{$I WaspLib/osr.simba}

var
  tpa: TPointArray = [];
  p : TPoint = [];

begin
  tpa := tpa.FilterBox(Box(p, 10, 10));

  WriteLn tpa <> [];
end.
*)

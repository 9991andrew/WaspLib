{$DEFINE WL_ITEMFINDER_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}
const
  WL_ITEM_FINDER_IMAGES_PATH = {$macro CURRENT_DIRECTORY} + '/images/';

type
  TOverridenItem = record
    ItemID: Int32;
    Files: TStringArray;
  end;

  TOverridenItemArray = array of TOverridenItem;

procedure TOverridenItemArray.Setup(Item: TRSItem; FileName: String; FileCount: Int32 = 0);
var
  OverridenItem: TOverridenItem;
  i: Int32;
  Str: String;
begin
  Str := ToStr(Item);

  if ToStr(Str).IsInteger() then
    OverridenItem.ItemID := StrToInt(Str)
  else
  begin
    OverridenItem.ItemID := StrToInt(ItemFinder.ItemNames.GetValues(Str));
    if (OverridenItem.ItemID = 0) then
      ItemFinder.Fatal('Unknown item: ' + Str);
  end;

  for i := 0 to FileCount do
    OverridenItem.Files += FileName + ToStr(i) + '.png';

  Self += OverridenItem;
end;

function TOverridenItemArray.Find(ItemID: Int32): Int32;
var
  i: Int32;
begin
  for i := 0 to High(Self) do
    if Self[i].ItemId = ItemId then
      Exit(i);
  Result := -1;
end;


var
  OverridenItems: TOverridenItemArray;

function TRSItemFinder.GetItemImages(Item: String): array of TMufasaBitmap; override;
var
  FileName, Str: String;
  Image: TMufasaBitmap;
  ItemID: Int32;
  I, J: Int32;
begin
  for I := 0 to High(Self.ItemImages) do
    if (Self.ItemImages[I].Name = Item) then
    begin
      Result := Self.ItemImages[I].Images;

      Exit;
    end;

  for ItemID in Self.GetItemIDs(Item) do
  begin
    FileName := ExpandFileName(ITEM_FINDER_IMAGES_PATH + ToStr(ItemID) + '.png');

    if FileExists(FileName) or UnZipOneFile(ITEM_FINDER_IMAGES_ZIP, ExtractFileName(FileName), ITEM_FINDER_IMAGES_PATH) then
    begin
      Image := TMufasaBitmap.CreateFromFile(FileName);
      Image.SetName(Item);
      Image.ReplaceColor(RS_ITEM_SHADOW, 0);

      for J := 0 to High(Result) do
        if Image.Equals(Result[J]) then
        begin
          Image.Free();
          Image := nil;

          Break;
        end;

      if (Image <> nil) then
        Result += Image;
    end else
      Self.Fatal('Unknown item: ' + ToStr(ItemID));

    I := OverridenItems.Find(ItemId);
    if I > -1 then
    begin
      for Str in OverridenItems[I].Files do
      begin
        FileName := ExpandFileName(WL_ITEM_FINDER_IMAGES_PATH + Str);
        if FileExists(FileName) then
        begin
          Image := TMufasaBitmap.CreateFromFile(FileName);
          Image.SetName(Item);
          Image.ReplaceColor(RS_ITEM_SHADOW, 0);

          for J := 0 to High(Result) do
            if Image.Equals(Result[J]) then
            begin
              Image.Free();
              Image := nil;

              Break;
            end;

          if (Image <> nil) then
            Result += Image;
        end;
      end;
    end;
  end;

  if (Length(Result) = 0) then
    Self.Fatal('Unknown item: ' + Item);

  Self.ItemImages += [Item, Result];
end;

begin
  OverridenItems.Setup('Pay-dirt', 'paydirt');
  OverridenItems.Setup('Rune pouch', 'runepouch');

  ItemFinder.AddItemName('cake(3)', '1891');
  ItemFinder.AddItemName('cake(2)', '1893');
  ItemFinder.AddItemName('cake(1)', '1895');

  ItemFinder.AddItemName('meat pie(2)', '2327');
  ItemFinder.AddItemName('meat pie(1)', '2331');

  ItemFinder.AddItemName('plain pizza(2)', '2289');
  ItemFinder.AddItemName('plain pizza(1)', '2291');

  ItemFinder.AddItemName('apple pie(2)', '2323');
  ItemFinder.AddItemName('apple pie(1)', '2335');

  ItemFinder.AddItemName('chocolate cake(3)', '1897');
  ItemFinder.AddItemName('chocolate cake(2)', '1899');
  ItemFinder.AddItemName('chocolate cake(1)', '1901');

  ItemFinder.AddItemName('meat pizza(2)', '2293');
  ItemFinder.AddItemName('meat pizza(1)', '2295');

  ItemFinder.AddItemName('anchovy pizza(2)', '2297');
  ItemFinder.AddItemName('anchovy pizza(1)', '2299');

  ItemFinder.AddItemName('pineapple pizza(2)', '2301');
  ItemFinder.AddItemName('pineapple pizza(1)', '2303');

  ItemFinder.AddItemName('pineapple pizza(2)', '2301');
  ItemFinder.AddItemName('pineapple pizza(1)', '2303');

  ItemFinder.AddItemName('redberry pie(2)', '2325');
  ItemFinder.AddItemName('redberry pie(1)', '2333');

  ItemFinder.AddItemName('garden pie(2)', '7178');
  ItemFinder.AddItemName('garden pie(1)', '7180');

  ItemFinder.AddItemName('fish pie(2)', '7188');
  ItemFinder.AddItemName('fish pie(1)', '7190');

  ItemFinder.AddItemName('botanical pie(2)', '19662');
  ItemFinder.AddItemName('botanical pie(1)', '19659');

  ItemFinder.AddItemName('mushroom pie(2)', '21687');
  ItemFinder.AddItemName('mushroom pie(1)', '21690');

  ItemFinder.AddItemName('admiral pie(2)', '7198');
  ItemFinder.AddItemName('admiral pie(1)', '7200');

  ItemFinder.AddItemName('dragonfruit pie(2)', '22795');
  ItemFinder.AddItemName('dragonfruit pie(1)', '22792');

  ItemFinder.AddItemName('wild pie(2)', '7208');
  ItemFinder.AddItemName('wild pie(1)', '7210');

  ItemFinder.AddItemName('summer pie(2)', '7218');
  ItemFinder.AddItemName('summer pie(1)', '7220');
end;

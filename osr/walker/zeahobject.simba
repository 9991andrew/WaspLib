type
  TZeahRSObject = record(TWebGraph)
    CurrentBank: record
      Tile: TPoint;
      PrimaryColor: TCTS2Color;
      SecondaryColor: TCTS2Color;
    end;

    Tiles: record
      HosidiusKitchenBank: TPoint;
      HosidiusKitchenOven: TPoint;

      WestFruitStall: TPointArray;
      EastFruitStall: TPointArray;

      TitheTable: TPointArray;
      TitheDoor: TPoint;

      TitheWaterBarrels: TPointArray;
      TitheSack: TPointArray;
    end;

    Colors: record
      HosidiusKitchenBank: TCTS2Color;
      HosidiusKitchenOven: TCTS2Color;

      FruitStallPrimary: TCTS2Color;
      FruitStallSecondary: TCTS2Color;

      TitheTablePrimary: TCTS2Color;
      TitheTableSecondary: TCTS2Color;
      TitheDoor: TCTS2Color;

      TitheWaterBarrelsPrimary: TCTS2Color;
      TitheWaterBarrelsSecondary: TCTS2Color;
      TitheSackPrimary: TCTS2Color;
      TitheSackSecondary: TCTS2Color;
    end;
  end;


procedure TZeahRSObject.SetCurrentBank(Tile: TPoint; Color: TCTS2Color);
begin
  CurrentBank.Tile := Tile;
  CurrentBank.PrimaryColor := Color;
end;

procedure TZeahRSObject.SetCurrentBank(Tiles: TPointArray; Color: TCTS2Color); overload;
begin
  CurrentBank.Tile := Tiles[Random(0, High(Tiles))];
  CurrentBank.PrimaryColor := Color;
end;

procedure TZeahRSObject.SetCurrentBank(Tiles: T2DPointArray; Color: TCTS2Color); overload;
var
  i: Int32;
begin
  i := Random(0, High(Tiles));
  CurrentBank.Tile  := Tiles[i][Random(0, High(Tiles[i]))];
  CurrentBank.PrimaryColor := Color;
end;

procedure TZeahRSObject.SetCurrentBank(Tile: TPoint; PrimaryColor, SecondaryColor: TCTS2Color); overload
begin
  CurrentBank.Tile := Tile;
  CurrentBank.PrimaryColor := PrimaryColor;
  CurrentBank.SecondaryColor := SecondaryColor;
end;

procedure TZeahRSObject.SetCurrentBank(Tiles: TPointArray; PrimaryColor, SecondaryColor: TCTS2Color); overload;
begin
  CurrentBank.Tile := Tiles[Random(0, High(Tiles))];
  CurrentBank.PrimaryColor := PrimaryColor;
  CurrentBank.SecondaryColor := SecondaryColor;
end;

procedure TZeahRSObject.SetCurrentBank(Tiles: T2DPointArray; PrimaryColor, SecondaryColor: TCTS2Color); overload;
var
  i: Int32;
begin
  i := Random(0, High(Tiles));
  CurrentBank.Tile := Tiles[i][Random(0, High(Tiles[i]))];
  CurrentBank.PrimaryColor := PrimaryColor;
  CurrentBank.SecondaryColor := SecondaryColor;
end;



procedure TZeahRSObject.LoadTiles;
begin
  Tiles.HosidiusKitchenBank := [2094, 1999];
  Tiles.HosidiusKitchenOven := [2101, 1970];

  Tiles.WestFruitStall := [[2572, 2027], [2572, 2029]];
  Tiles.EastFruitStall := [[2598, 2026], [2598, 2027]];

  Tiles.TitheTable := [[2600, 2435], [2605, 2435]];
  Tiles.TitheDoor := [2611, 2443];

  Tiles.TitheWaterBarrels := [[2628, 2446], [2733, 2439], [2684, 2508], [2677, 2383]];
  Tiles.TitheSack := [[2628, 2439], [2673, 2446], [2733, 2447]];
end;

procedure TZeahRSObject.LoadColors;
begin
  Colors.HosidiusKitchenBank := CTS2(1986147, 19, 0.07, 0.93);
  Colors.HosidiusKitchenOven := CTS2(4145256, 26, 0.04, 0.89);

  Colors.FruitStallPrimary := CTS2(1666610, 20, 0.33, 2);
  Colors.FruitStallSecondary := CTS2(4805477, 11, 0.04, 0.48);

  Colors.TitheTablePrimary := CTS2(7753911, 26, 0.37, 1.11);
  Colors.TitheTableSecondary := CTS2(4349035, 10, 0.06, 0.52);
  Colors.TitheDoor := CTS2(2961462, 13, 0.46, 0.57);

  Colors.TitheWaterBarrelsPrimary := CTS2(7693402, 9, 0.18, 0.87);
  Colors.TitheWaterBarrelsSecondary := CTS2(932429, 13, 0.06, 2.56);

  Colors.TitheSackPrimary := CTS2(4362142, 12, 0.03, 0.43);
  Colors.TitheSackSecondary := CTS2(2576736, 20, 0.04, 0.33);
end;


procedure TZeahRSObject.Load;
begin
  Self.LoadTiles;
  Self.LoadColors;
end;

var
  ZeahObjects: TZeahRSObject;



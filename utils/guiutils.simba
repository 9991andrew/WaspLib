{$DEFINE WL_GUIUTILS_INCLUDED}
{$IFNDEF WL_UTILS}
  {$I WaspLib/utils.simba}
{$ENDIF}

type
  TLabeledControl = record
    Title: TLabel;
  end;

  TLabeledEdit = record(TLabeledControl)
    Edit: TEdit;
  end;

  TLabeledCheckbox = record(TLabeledControl)
    Checkbox: TCheckBox;
  end;

  TLabeledCombobox = record(TLabeledControl)
    Combobox: TComboBox;
  end;

  TLabeledMemo = record(TLabeledControl)
    Memo: TMemo;
  end;


//Labeled controls
procedure TLabeledControl.Init(AOwner: TComponent);
begin
  Title.Init(AOwner);
  Title.SetParent(AOwner);
  Title.setHeight(17);
end;

procedure TLabeledControl.SetCaption(Value: String);
begin
  Title.setCaption(Value);
end;

function TLabeledControl.GetTop: Integer;
begin
  Result := Title.GetTop;
end;

function TLabeledControl.GetLeft: Integer;
begin
  Result := Title.GetLeft;
end;


//Labeled Edits
procedure TLabeledEdit.Init(AOwner: TComponent); override;
begin
  inherited;
  Edit.Init(AOwner);
  Edit.SetParent(AOwner);
end;

procedure TLabeledEdit.SetTop(Value: Integer);
begin
  Title.SetTop(Value);
  Edit.SetTop(Value + Title.GetHeight + 1);
end;

procedure TLabeledEdit.SetLeft(Value: Integer);
begin
  Title.SetLeft(Value);
  Edit.SetLeft(Value);
end;


procedure TLabeledEdit.SetHeight(Value: Integer);
begin
  Edit.setHeight(Value);
end;

procedure TLabeledEdit.SetWidth(Value: Integer);
begin
  Title.setWidth(Value);
  Edit.setWidth(Value);
end;

function TLabeledEdit.GetHeight: Integer;
begin
  Result := Title.getHeight + Edit.getHeight + 3;
end;

function TLabeledEdit.GetWidth: Integer;
begin
  Result := Edit.getWidth;
end;


procedure TLabeledEdit.SetText(Value: String);
begin
  Edit.setText(Value);
end;

function TLabeledEdit.GetText: String;
begin
  Result := Edit.GetText;
end;



//Labeled checkboxes
procedure TLabeledCheckbox.Init(AOwner: TComponent); override;
begin
  inherited;
  Checkbox.Init(AOwner);
  Checkbox.SetParent(AOwner);
end;

procedure TLabeledCheckbox.SetTop(Value: Integer);
begin
  Title.SetTop(Value);
  Checkbox.SetTop(Value - 1);
end;

procedure TLabeledCheckbox.SetLeft(Value: Integer);
begin
  Title.SetLeft(Value);
  Checkbox.SetLeft(Value + Title.getWidth + 25);
end;


procedure TLabeledCheckbox.SetHeight(Value: Integer);
begin
  Title.setHeight(Value);
  Checkbox.setHeight(Value);
end;

procedure TLabeledCheckbox.SetWidth(Value: Integer);
begin
  Checkbox.SetWidth(Value);
end;

function TLabeledCheckbox.GetHeight: Integer;
begin
  Result := Title.getHeight;
end;

function TLabeledCheckbox.GetWidth: Integer;
begin
  Result := Title.getWidth + Checkbox.getWidth + 3;
end;


procedure TLabeledCheckbox.SetEnabled(Value: Boolean);
begin
  if Value then
    Checkbox.setState(cbChecked)
  else
    Checkbox.setState(cbUnchecked) ;
end;


//Labeled combobox
procedure TLabeledCombobox.Init(AOwner: TComponent); override;
begin
  inherited;
  Combobox.Init(AOwner);
  Combobox.SetParent(AOwner);
end;

procedure TLabeledCombobox.SetTop(Value: Integer);
begin
  Title.SetTop(Value);
  Combobox.SetTop(Value + Title.GetHeight + 1);
end;

procedure TLabeledCombobox.SetLeft(Value: Integer);
begin
  Title.SetLeft(Value);
  Combobox.SetLeft(Value);
end;


procedure TLabeledCombobox.SetHeight(Value: Integer);
begin
  Combobox.setHeight(Value);
end;

procedure TLabeledCombobox.SetWidth(Value: Integer);
begin
  Title.setWidth(Value);
  Combobox.setWidth(Value);
end;

function TLabeledCombobox.GetHeight: Integer;
begin
  Result := Combobox.GetTop + Combobox.GetHeight;
end;

function TLabeledCombobox.GetWidth: Integer;
begin
  Result := Combobox.getWidth;
end;

procedure TLabeledCombobox.Clear;
begin
  Combobox.Clear;
end;

procedure TLabeledCombobox.AddItem(Value: String);
begin
  Combobox.getItems.Add(Value);
end;

procedure TLabeledCombobox.SetItemIndex(Value: Int32);
begin
  Combobox.setItemIndex(Value);
end;

function TLabeledCombobox.GetItemIndex: Int32;
begin
  Result := Combobox.getItemIndex;
end;

procedure TLabeledCombobox.SetOnChange(Sender: TObject);
begin
  Combobox.setOnChange(Sender);
end;



//Labeled memo
procedure TLabeledMemo.Init(AOwner: TComponent); override;
begin
  inherited;
  Memo.Init(AOwner);
  Memo.SetParent(AOwner);
end;

procedure TLabeledMemo.SetTop(Value: Integer);
begin
  Title.SetTop(Value);
  Memo.SetTop(Value + Title.GetHeight + 1);
end;

procedure TLabeledMemo.SetLeft(Value: Integer);
begin
  Title.SetLeft(Value);
  Memo.SetLeft(Value);
end;


procedure TLabeledMemo.SetHeight(Value: Integer);
begin
  Memo.setHeight(Value);
end;

procedure TLabeledMemo.SetWidth(Value: Integer);
begin
  Title.setWidth(Value);
  Memo.setWidth(Value);
end;

function TLabeledMemo.GetHeight: Integer;
begin
  Result := Title.getHeight + Memo.getHeight + 3;
end;

function TLabeledMemo.GetWidth: Integer;
begin
  Result := Memo.getWidth;
end;


procedure TLabeledMemo.SetText(Value: String);
begin
  Memo.setText(Value);
end;

function TLabeledMemo.GetText: String;
begin
  Memo.GetText;
end;


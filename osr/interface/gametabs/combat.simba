{$DEFINE WL_COMBAT_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type
  ERSCombatType = (
    COMBAT_UNKNOWN,
    COMBAT_RANGED,
    COMBAT_MELEE,
    COMBAT_MAGIC
  );

  TRSCombatStyle = record
    CombatType: ERSCombatType;
    CombatStyle: String;
  end;

const
  MELEE_ATTACK_STYLES: TStringArray = [
    COMBAT_STYLE_BASH,
    COMBAT_STYLE_POUND,
    COMBAT_STYLE_FOCUS,
    COMBAT_STYLE_CHOP,
    COMBAT_STYLE_SLASH,
    COMBAT_STYLE_LUNGE,
    COMBAT_STYLE_BLOCK,
    COMBAT_STYLE_FLICK,
    COMBAT_STYLE_LASH,
    COMBAT_STYLE_DEFLECT,
    COMBAT_STYLE_SWIPE,
    COMBAT_STYLE_SMASH
  ];

  RANGED_ATTACK_STYLES = [
    COMBAT_STYLE_ACCURATE,
    COMBAT_STYLE_RAPID,
    COMBAT_STYLE_LONGRANGE
  ];

  MAGIC_ATTACK_STYLES =  [
    COMBAT_STYLE_ACCURATE,
    COMBAT_STYLE_ACCURATE,
    COMBAT_STYLE_LONGRANGE
  ];


function TRSCombatStyle.GetCombatType(): ERSCombatType;
begin
  Self.CombatStyle := Combat.GetCombatStyle();

  if Self.CombatStyle = '' then
    Exit;

  if MELEE_ATTACK_STYLES.Contains(Self.CombatStyle) then
  begin
    Self.CombatType := ERSCombatType.COMBAT_MELEE;
    Exit(Self.CombatType);
  end;

  if Combat.ElementFinder.HasText(Combat.ELEMENT_STYLE_1, [RSColors.TEXT_ORANGE], COMBAT_STYLE_RAPID, RS_FONT_PLAIN_11) or
     Combat.ElementFinder.HasText(Combat.ELEMENT_STYLE_2, [RSColors.TEXT_ORANGE], COMBAT_STYLE_RAPID, RS_FONT_PLAIN_11) or
     Combat.ElementFinder.HasText(Combat.ELEMENT_STYLE_3, [RSColors.TEXT_ORANGE], COMBAT_STYLE_RAPID, RS_FONT_PLAIN_11) or
     Combat.ElementFinder.HasText(Combat.ELEMENT_STYLE_4, [RSColors.TEXT_ORANGE], COMBAT_STYLE_RAPID, RS_FONT_PLAIN_11) then
  begin
    Self.CombatType := ERSCombatType.COMBAT_RANGED;
    Exit(Self.CombatType);
  end;

  Result := Self.CombatType := ERSCombatType.COMBAT_MAGIC;
end;

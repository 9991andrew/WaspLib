var
  form: TForm;
  panelTop, panelBottom: TPanel;
  button: TButton;
  dropDown: TComboBox;

procedure OnFormShow(Sender: TObject);
begin
  //Add here anything you want to do when the form shows up.
  //If you don't need anything you can remove this procedure and remove **Form.SetOnShow(@OnFormShow);**
end;

procedure OnFormClose(Sender: TObject; var CloseAction: TCloseAction);
begin
  //Add here anything you want to do when the form is closed.
  //For example, run the actual script or setup variables.
  //I usually setup variables.
end;

procedure InitForm();
begin
  form.Init(nil); //nil because the form itself has no parent.
  form.SetPosition(poScreenCenter);
  form.SetCaption('Form window title!');
  form.SetWidth(200);
  form.SetHeight(150);
  form.SetOnShow(@OnFormShow);   //callback to do stuff when the form is displayed.
  form.SetOnClose(@OnFormClose); //callback to do stuff when the form is closed.

  panelTop.Init(form);
  panelTop.SetParent(form);
  panelTop.SetAutoSize(True);
  panelTop.SetAlign(alTop);

  panelBottom.Init(form);
  panelBottom.SetParent(form);
  panelBottom.SetAutoSize(True);
  panelBottom.SetAlign(alBottom);

  dropDown.Init(panelTop);
  dropDown.setParent(panelTop);
  dropDown.getItems().Add('element1');
  dropDown.getItems().Add('element2');

  button.Init(panelBottom);
  button.setParent(panelBottom);
  button.setCaption('Click me! :)');
end;

procedure RunForm();
begin
  //you should wrap it in try/except in case users do things you don't expect.
  try
    //All form stuff should be initiated here.
    InitForm(); //I prefer to have a different procedure for it.
    Form.ShowModal(); //Displays the form
    Form.Free();      //Form is displayed and can be freed.
  except
    Writeln GetExceptionMessage();
  end;
end;

begin
  Sync(@RunForm); //You need to sync it to run a form this basically tells your Operating system you need to run something on another thread or something.... I don't fully understand it tbh but it's required AFAIK.
end.

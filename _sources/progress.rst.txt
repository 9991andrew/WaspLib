
ProgressReport
==============
This is what's responsible for the in game screen report, often called as
"paint" or HUDProgressReport in WaspLib.

You can easily toggle the usage this on or off by switching the variables:
- `WLSettings.RemoteInput.HUDReport`
- `WLSettings.RemoteInput.Enabled`

.. note:: Keep in mind that ProgressReport requires remote input.


------------

type TProgressReport
~~~~~~~~~~~~~~~~~~~~
Type responsible for handling the HUDProgressReport, also commonly called as "Paint" or InGame/OnScreen Progress Report.


------------

ProgressReport.Terminate
~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure TProgressReport.Terminate();

Internal method called automatically on termination. This will do things such as free used assetsa and clear the progress report from the game screen.


------------

ProgressReport.Setup
~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure TProgressReport.Setup();

Internal method called when we need to setup TProgressReport.


------------

ProgressReport.DrawBackground
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure TProgressReport.DrawBackground(strArray: TStringArray; FontColor: Int32);

Method that handles drawing the background of our TProgressReport.
Usually called internally by TProgressReport.Update().


------------

ProgressReport.DrawProgress
~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure TProgressReport.DrawProgress(strArray: TStringArray; fontColor: Int32);

Method that handles drawing the text of our TProgressReport.
Usually called internally by TProgressReport.Update().


------------

ProgressReport.HideProgress
~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure TProgressReport.HideProgress();

Used to hide TProgressReport.
Usually called internally by TProgressReport.Update().


------------

ProgressReport.Update
~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure TProgressReport.Update(StrArray: TStringArray);

Main method that should be called to used to start and update TProgressReport.

To see TProgressReport.GetNextCycleColor() in action, which was just a fun experiment,
uncomment `Self.TextColor := Self.GetNextCycleColor(Self.TextColor, 10);`


------------

ProgressReport.Setup
~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

 procedure TProgressReport.Setup(); override;

Overriden method to enable TProgressReport.Timer.
This required to be overriden or we couldn't call already declared methods in ProgressReport.CheckButton().

THIS IS DISABLED IN SIMBA1400 SINCE THIS IS ONLY A THING IN SIMBA1500!


------------

var ProgressReport
~~~~~~~~~~~~~~~~~~
Global TProgressReport variable.


------------

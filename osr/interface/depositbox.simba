{$DEFINE WL_DEPOSITBOX_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

//TODO: Add this to SRL when interface update drops.

function TRSDepositBox.FindItem(Item: TRSItem; out Bounds: TBox): Boolean;
var
  Boxes: TBoxArray;
  Indices: TIntegerArray;
begin
  if not Self.IsOpen then
    Exit;

  Boxes := Self.GetSlotBoxes;
  Indices := ItemFinder.Find(Item, Boxes, 1);
  if Result := Indices <> [] then
    Bounds := Boxes[Indices[0]];
end;

//overload to not require passing a TBox.
function TRSDepositBox.FindItem(Item: TRSItem): Boolean; overload;
var
  B: TBox;
begin
  Result := Self.FindItem(Item, B);
end;

function TRSDepositBox.HoverItem(Item: TRSItem): Boolean;
var
  B: TBox;
begin
  Result := Self.FindItem(Item, B);
  if Result then
    Mouse.Move(B);
end;

function TRSDepositBox.DepositHelper(B: TBox; Amount: Int32; UseQuantityButtons: Boolean): Boolean;
var
  Button: TRSButton;
begin
  if UseQuantityButtons then
  begin
    if Bank.IsCustomQuantity(Amount) then
    begin
      Button := Self.GetButton(ERSDepositButton.QUANTITY_CUSTOM);

      if Button.Enable then
      begin
        Mouse.Move(B);

        if MainScreen.IsUpText('Deposit-' + ToString(Amount)) then
        begin
          Mouse.Click(MOUSE_LEFT);

          Result := True;
        end else
          Result := ChooseOption.Select('Deposit-X') and Chat.AnswerQuery('Enter amount', ToString(Amount), Random(2000, 4000));
      end;
    end else
    begin
      case Amount of
        1:  Button := Self.GetButton(ERSDepositButton.QUANTITY_1);
        5:  Button := Self.GetButton(ERSDepositButton.QUANTITY_5);
        10: Button := Self.GetButton(ERSDepositButton.QUANTITY_10);
        else
            Button := Self.GetButton(ERSDepositButton.QUANTITY_ALL)
      end;

      if Button.Enable then
      begin
        Result := True;

        Mouse.Click(B, MOUSE_LEFT);
      end;
    end;
  end else
  begin
    Mouse.Move(B);

    case Amount of
      BANK_DEPOSIT_ALL:
        Result := ChooseOption.Select('Deposit-All');
      else
        Result := ChooseOption.Select('Deposit-' + ToString(Amount) + ' ', MOUSE_LEFT, True, False) or
                  ChooseOption.Select('Deposit-X') and Chat.AnswerQuery('Enter amount', ToString(Amount), Random(2000, 2500));
    end;
  end;
end;

function TRSDepositBox.DepositItem(Item: TRSBankDepositItem; UseQuantityButtons: Boolean): Boolean;
var
  B: TBox;
begin
  if Self.FindItem(Item.Item, B) then
    Result := Self.DepositHelper(B, Item.Quantity, UseQuantityButtons);
end;





function TRSDepositBox.DepositItem(Item: TRSItem; UseQuantityButtons: Boolean): Boolean; overload;
begin
  Result := Self.DepositItem([Item, BANK_DEPOSIT_ALL], UseQuantityButtons);
end;

function TRSDepositBox.DepositItemArray(ItemArray: array of TRSBankDepositItem; UseQuantityButtons: Boolean): Boolean;
var
  Item: TRSBankDepositItem;
  ItemList: array of TRSBankDepositItem;
begin
  for Item in ItemArray do
    if Self.FindItem(Item.Item) then
      ItemList += Item;

  for Item in Itemlist do
    if not Self.DepositItem(Item, UseQuantityButtons) then
      Exit(False);

  Result := True;
end;

function TRSDepositBox.DepositItemArray(ItemArray: TRSItemArray; UseQuantityButtons: Boolean): Boolean; overload;
var
  Item: TRSItem;
  ItemList: TRSItemArray;
begin
  for Item in ItemArray do
    if Self.FindItem(Item) then
      ItemList += Item;

  for Item in Itemlist do
    if not Self.DepositItem(Item, UseQuantityButtons) then
      Exit(False);

  Result := True;
end;

(*
TRSDepositBox.CountSlots
~~~~~~~~~~~~~~~~~~~~~~~~
.. pascal:: function TRSDepositBox.CountSlots(): Int32;

Counts the total number of individual items in the depositbox

.. note:: This is automatically called on the **Bank** variable.
*)
function TRSDepositBox.CountSlots(): Int32;
var
  Box: TBox;
  Pt: TPoint;
  TPA: TPointArray;
begin
  if not Self.IsOpen() then
    Exit;

  if SRL.FindColors(TPA, RS_ITEM_BORDER, Self.Bounds) > 0 then
    for Box in Self.GetSlotBoxes() do
      for Pt in TPA do
        if Pt.InBox(Box) then
        begin
          Inc(Result);
          break;
        end;
end;

function TRSDepositBox.CountItem(Item: TRSItem): Int32;
begin
  if not Self.IsOpen() then
    Exit;

  Result := Length(ItemFinder.Find(Item, Self.GetSlotBoxes()));
end;

function TRSDepositBox.CountItemStack(Item: TRSItem): Int32;
var
  B: TBox;
begin
  Result := -1;
  if Self.FindItem(Item, B) then
    Result := SRL.GetItemAmount(B);
end;

function TRSDepositBox.DepositAll: Boolean;
begin
  Result := (Self.CountSlots() = 0) or Self.GetButton(ERSDepositButton.DEPOSIT_INVENTORY).Click();
end;



{$DEFINE WL_PROGRESS_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type
  TWaspProgressReport = record
    ClientBMP: TMufasaBitmap;
    BGImg: TMufasaBitmap;
    PreviousStrArray: TStringArray;
    IsSetup: Boolean;
  end;


procedure TWaspProgressReport.Terminate;
begin
  BGImg.Clear;
  BGImg.Free;

  ClientBMP.Clear;
  ClientBMP.Free; //not sure if it needs to be freed?
end;

procedure TWaspProgressReport.Setup;
const
  BG_PATH = {$MACRO CURRENT_DIRECTORY} + DirectorySeparator;
begin
  BGImg.Init;
  ClientBMP := RSClient.Image;

  BGImg.Clear;
  ClientBMP.Clear;

  BGImg.LoadFromFile(BG_PATH + 'WaspProgress.png');

  ClientBMP.setFontAntialiasing(True);
  BGImg.setFontAntialiasing(True);
  {$IFDEF WINDOWS}
  BGImg.setFontName('Courier New');
  ClientBMP.setFontName('Courier New');
  {$ENDIF}
  ClientBMP.setFontSize(13);

  AddOnTerminate(@Self.Terminate);
end;


procedure TMufasaBitmap.DrawTextShadow(Text: String; P: TPoint; Color: Int32; DarkShadow: Boolean = True);
var
  ShadowColor: Int32;
begin
  if DarkShadow then ShadowColor := 0
  else ShadowColor := $FFFFFF;

  Self.DrawText(Text, [P.X + 1, P.Y], ShadowColor);
  Self.DrawText(Text, P, Color);
end;


procedure TWaspProgressReport.DrawBackground(StrArray: TStringArray; FontColor: Int32);
var
  P: TPoint;
begin
  if not IsSetup then
  begin
    P := [10, 15];

    BGImg.setFontSize(18);
    BGImg.DrawTextShadow(StrArray[0], P, FontColor, False);

    BGImg.setFontSize(14);
    P.Y += 105;
    FontColor -= $90A301 - $C8D100;
    BGImg.DrawText(StrArray[4], P, FontColor);

    IsSetup := True;
  end;

  ClientBMP.DrawBitmap(BGImg, [Chat.Bounds.X1, Chat.Bounds.Y1]);
end;

procedure TWaspProgressReport.DrawProgress(StrArray: TStringArray; FontColor: Int32);
var
  P: TPoint;
  i: Int32;
begin
  P := [Chat.Bounds.X1 + 10, Chat.Bounds.Y1 + 50];

  FontColor -= $C8D100;

  for i := 1 to 3 do
  begin
    ClientBMP.DrawTextShadow(StrArray[i], P, FontColor, False);
    P.Y += 20;
  end;

  PreviousStrArray := StrArray;
end;


procedure TWaspProgressReport.Update(StrArray: TStringArray; FontColor: Int64 = $006CFF);
begin
  ClientBMP.Clear;

  if StrArray = [] then
    Exit;

  Self.DrawBackground(StrArray, FontColor);
  Self.DrawProgress(StrArray, FontColor);
end;

var
  ProgressReport: TWaspProgressReport;
